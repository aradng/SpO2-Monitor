ARM GAS  C:\Users\arada\AppData\Local\Temp\ccpHng49.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	NMI_Handler:
  25              	.LFB65:
  26              		.file 1 "Core/Src/stm32f1xx_it.c"
   1:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f1xx_it.c **** /**
   3:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:Core/Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f1xx_it.c ****   * @attention
   8:Core/Src/stm32f1xx_it.c ****   *
   9:Core/Src/stm32f1xx_it.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/stm32f1xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32f1xx_it.c ****   *
  12:Core/Src/stm32f1xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/stm32f1xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/stm32f1xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/stm32f1xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/stm32f1xx_it.c ****   *
  17:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32f1xx_it.c ****   */
  19:Core/Src/stm32f1xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32f1xx_it.c **** 
  21:Core/Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f1xx_it.c **** #include "main.h"
  23:Core/Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  24:Core/Src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32f1xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32f1xx_it.c **** 
  28:Core/Src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32f1xx_it.c **** 
  31:Core/Src/stm32f1xx_it.c **** /* USER CODE END TD */
  32:Core/Src/stm32f1xx_it.c **** 
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccpHng49.s 			page 2


  33:Core/Src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32f1xx_it.c **** 
  36:Core/Src/stm32f1xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32f1xx_it.c **** 
  38:Core/Src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32f1xx_it.c **** 
  41:Core/Src/stm32f1xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32f1xx_it.c **** 
  43:Core/Src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32f1xx_it.c **** 
  46:Core/Src/stm32f1xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32f1xx_it.c **** 
  48:Core/Src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32f1xx_it.c **** 
  51:Core/Src/stm32f1xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32f1xx_it.c **** 
  53:Core/Src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32f1xx_it.c **** 
  56:Core/Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32f1xx_it.c **** 
  58:Core/Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32f1xx_it.c **** extern ADC_HandleTypeDef hadc1;
  60:Core/Src/stm32f1xx_it.c **** extern ADC_HandleTypeDef hadc2;
  61:Core/Src/stm32f1xx_it.c **** extern I2C_HandleTypeDef hi2c1;
  62:Core/Src/stm32f1xx_it.c **** extern SPI_HandleTypeDef hspi2;
  63:Core/Src/stm32f1xx_it.c **** extern TIM_HandleTypeDef htim1;
  64:Core/Src/stm32f1xx_it.c **** 
  65:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  66:Core/Src/stm32f1xx_it.c **** 
  67:Core/Src/stm32f1xx_it.c **** /* USER CODE END EV */
  68:Core/Src/stm32f1xx_it.c **** 
  69:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  70:Core/Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */
  71:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  72:Core/Src/stm32f1xx_it.c **** /**
  73:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  74:Core/Src/stm32f1xx_it.c ****   */
  75:Core/Src/stm32f1xx_it.c **** void NMI_Handler(void)
  76:Core/Src/stm32f1xx_it.c **** {
  27              		.loc 1 76 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  77:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  78:Core/Src/stm32f1xx_it.c **** 
  79:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  80:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  81:Core/Src/stm32f1xx_it.c **** 
  82:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  83:Core/Src/stm32f1xx_it.c **** }
  32              		.loc 1 83 1 view .LVU1
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccpHng49.s 			page 3


  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE65:
  37              		.section	.text.HardFault_Handler,"ax",%progbits
  38              		.align	1
  39              		.global	HardFault_Handler
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu softvfp
  45              	HardFault_Handler:
  46              	.LFB66:
  84:Core/Src/stm32f1xx_it.c **** 
  85:Core/Src/stm32f1xx_it.c **** /**
  86:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  87:Core/Src/stm32f1xx_it.c ****   */
  88:Core/Src/stm32f1xx_it.c **** void HardFault_Handler(void)
  89:Core/Src/stm32f1xx_it.c **** {
  47              		.loc 1 89 1 view -0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.L3:
  90:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  91:Core/Src/stm32f1xx_it.c **** 
  92:Core/Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  93:Core/Src/stm32f1xx_it.c ****   while (1)
  54              		.loc 1 93 3 discriminator 1 view .LVU3
  94:Core/Src/stm32f1xx_it.c ****   {
  95:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  96:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  97:Core/Src/stm32f1xx_it.c ****   }
  55              		.loc 1 97 3 discriminator 1 view .LVU4
  93:Core/Src/stm32f1xx_it.c ****   {
  56              		.loc 1 93 9 discriminator 1 view .LVU5
  57 0000 FEE7     		b	.L3
  58              		.cfi_endproc
  59              	.LFE66:
  61              		.section	.text.MemManage_Handler,"ax",%progbits
  62              		.align	1
  63              		.global	MemManage_Handler
  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
  67              		.fpu softvfp
  69              	MemManage_Handler:
  70              	.LFB67:
  98:Core/Src/stm32f1xx_it.c **** }
  99:Core/Src/stm32f1xx_it.c **** 
 100:Core/Src/stm32f1xx_it.c **** /**
 101:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
 102:Core/Src/stm32f1xx_it.c ****   */
 103:Core/Src/stm32f1xx_it.c **** void MemManage_Handler(void)
 104:Core/Src/stm32f1xx_it.c **** {
  71              		.loc 1 104 1 view -0
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccpHng49.s 			page 4


  72              		.cfi_startproc
  73              		@ Volatile: function does not return.
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
  77              	.L5:
 105:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 106:Core/Src/stm32f1xx_it.c **** 
 107:Core/Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 108:Core/Src/stm32f1xx_it.c ****   while (1)
  78              		.loc 1 108 3 discriminator 1 view .LVU7
 109:Core/Src/stm32f1xx_it.c ****   {
 110:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 111:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 112:Core/Src/stm32f1xx_it.c ****   }
  79              		.loc 1 112 3 discriminator 1 view .LVU8
 108:Core/Src/stm32f1xx_it.c ****   {
  80              		.loc 1 108 9 discriminator 1 view .LVU9
  81 0000 FEE7     		b	.L5
  82              		.cfi_endproc
  83              	.LFE67:
  85              		.section	.text.BusFault_Handler,"ax",%progbits
  86              		.align	1
  87              		.global	BusFault_Handler
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  91              		.fpu softvfp
  93              	BusFault_Handler:
  94              	.LFB68:
 113:Core/Src/stm32f1xx_it.c **** }
 114:Core/Src/stm32f1xx_it.c **** 
 115:Core/Src/stm32f1xx_it.c **** /**
 116:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 117:Core/Src/stm32f1xx_it.c ****   */
 118:Core/Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 119:Core/Src/stm32f1xx_it.c **** {
  95              		.loc 1 119 1 view -0
  96              		.cfi_startproc
  97              		@ Volatile: function does not return.
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              		@ link register save eliminated.
 101              	.L7:
 120:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 121:Core/Src/stm32f1xx_it.c **** 
 122:Core/Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 123:Core/Src/stm32f1xx_it.c ****   while (1)
 102              		.loc 1 123 3 discriminator 1 view .LVU11
 124:Core/Src/stm32f1xx_it.c ****   {
 125:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 126:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 127:Core/Src/stm32f1xx_it.c ****   }
 103              		.loc 1 127 3 discriminator 1 view .LVU12
 123:Core/Src/stm32f1xx_it.c ****   {
 104              		.loc 1 123 9 discriminator 1 view .LVU13
 105 0000 FEE7     		b	.L7
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccpHng49.s 			page 5


 106              		.cfi_endproc
 107              	.LFE68:
 109              		.section	.text.UsageFault_Handler,"ax",%progbits
 110              		.align	1
 111              		.global	UsageFault_Handler
 112              		.syntax unified
 113              		.thumb
 114              		.thumb_func
 115              		.fpu softvfp
 117              	UsageFault_Handler:
 118              	.LFB69:
 128:Core/Src/stm32f1xx_it.c **** }
 129:Core/Src/stm32f1xx_it.c **** 
 130:Core/Src/stm32f1xx_it.c **** /**
 131:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 132:Core/Src/stm32f1xx_it.c ****   */
 133:Core/Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 134:Core/Src/stm32f1xx_it.c **** {
 119              		.loc 1 134 1 view -0
 120              		.cfi_startproc
 121              		@ Volatile: function does not return.
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 125              	.L9:
 135:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 136:Core/Src/stm32f1xx_it.c **** 
 137:Core/Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 138:Core/Src/stm32f1xx_it.c ****   while (1)
 126              		.loc 1 138 3 discriminator 1 view .LVU15
 139:Core/Src/stm32f1xx_it.c ****   {
 140:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 141:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 142:Core/Src/stm32f1xx_it.c ****   }
 127              		.loc 1 142 3 discriminator 1 view .LVU16
 138:Core/Src/stm32f1xx_it.c ****   {
 128              		.loc 1 138 9 discriminator 1 view .LVU17
 129 0000 FEE7     		b	.L9
 130              		.cfi_endproc
 131              	.LFE69:
 133              		.section	.text.SVC_Handler,"ax",%progbits
 134              		.align	1
 135              		.global	SVC_Handler
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 139              		.fpu softvfp
 141              	SVC_Handler:
 142              	.LFB70:
 143:Core/Src/stm32f1xx_it.c **** }
 144:Core/Src/stm32f1xx_it.c **** 
 145:Core/Src/stm32f1xx_it.c **** /**
 146:Core/Src/stm32f1xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 147:Core/Src/stm32f1xx_it.c ****   */
 148:Core/Src/stm32f1xx_it.c **** void SVC_Handler(void)
 149:Core/Src/stm32f1xx_it.c **** {
 143              		.loc 1 149 1 view -0
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccpHng49.s 			page 6


 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 150:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 151:Core/Src/stm32f1xx_it.c **** 
 152:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 153:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 154:Core/Src/stm32f1xx_it.c **** 
 155:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 156:Core/Src/stm32f1xx_it.c **** }
 148              		.loc 1 156 1 view .LVU19
 149 0000 7047     		bx	lr
 150              		.cfi_endproc
 151              	.LFE70:
 153              		.section	.text.DebugMon_Handler,"ax",%progbits
 154              		.align	1
 155              		.global	DebugMon_Handler
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 159              		.fpu softvfp
 161              	DebugMon_Handler:
 162              	.LFB71:
 157:Core/Src/stm32f1xx_it.c **** 
 158:Core/Src/stm32f1xx_it.c **** /**
 159:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 160:Core/Src/stm32f1xx_it.c ****   */
 161:Core/Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 162:Core/Src/stm32f1xx_it.c **** {
 163              		.loc 1 162 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 163:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 164:Core/Src/stm32f1xx_it.c **** 
 165:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 166:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 167:Core/Src/stm32f1xx_it.c **** 
 168:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 169:Core/Src/stm32f1xx_it.c **** }
 168              		.loc 1 169 1 view .LVU21
 169 0000 7047     		bx	lr
 170              		.cfi_endproc
 171              	.LFE71:
 173              		.section	.text.PendSV_Handler,"ax",%progbits
 174              		.align	1
 175              		.global	PendSV_Handler
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 179              		.fpu softvfp
 181              	PendSV_Handler:
 182              	.LFB72:
 170:Core/Src/stm32f1xx_it.c **** 
 171:Core/Src/stm32f1xx_it.c **** /**
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccpHng49.s 			page 7


 172:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Pendable request for system service.
 173:Core/Src/stm32f1xx_it.c ****   */
 174:Core/Src/stm32f1xx_it.c **** void PendSV_Handler(void)
 175:Core/Src/stm32f1xx_it.c **** {
 183              		.loc 1 175 1 view -0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187              		@ link register save eliminated.
 176:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 177:Core/Src/stm32f1xx_it.c **** 
 178:Core/Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 179:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 180:Core/Src/stm32f1xx_it.c **** 
 181:Core/Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 182:Core/Src/stm32f1xx_it.c **** }
 188              		.loc 1 182 1 view .LVU23
 189 0000 7047     		bx	lr
 190              		.cfi_endproc
 191              	.LFE72:
 193              		.section	.text.SysTick_Handler,"ax",%progbits
 194              		.align	1
 195              		.global	SysTick_Handler
 196              		.syntax unified
 197              		.thumb
 198              		.thumb_func
 199              		.fpu softvfp
 201              	SysTick_Handler:
 202              	.LFB73:
 183:Core/Src/stm32f1xx_it.c **** 
 184:Core/Src/stm32f1xx_it.c **** /**
 185:Core/Src/stm32f1xx_it.c ****   * @brief This function handles System tick timer.
 186:Core/Src/stm32f1xx_it.c ****   */
 187:Core/Src/stm32f1xx_it.c **** void SysTick_Handler(void)
 188:Core/Src/stm32f1xx_it.c **** {
 203              		.loc 1 188 1 view -0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207              		@ link register save eliminated.
 189:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 190:Core/Src/stm32f1xx_it.c **** 
 191:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 192:Core/Src/stm32f1xx_it.c **** 
 193:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 194:Core/Src/stm32f1xx_it.c **** 
 195:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 196:Core/Src/stm32f1xx_it.c **** }
 208              		.loc 1 196 1 view .LVU25
 209 0000 7047     		bx	lr
 210              		.cfi_endproc
 211              	.LFE73:
 213              		.section	.text.ADC1_2_IRQHandler,"ax",%progbits
 214              		.align	1
 215              		.global	ADC1_2_IRQHandler
 216              		.syntax unified
 217              		.thumb
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccpHng49.s 			page 8


 218              		.thumb_func
 219              		.fpu softvfp
 221              	ADC1_2_IRQHandler:
 222              	.LFB74:
 197:Core/Src/stm32f1xx_it.c **** 
 198:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 199:Core/Src/stm32f1xx_it.c **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 200:Core/Src/stm32f1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 201:Core/Src/stm32f1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 202:Core/Src/stm32f1xx_it.c **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 203:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 204:Core/Src/stm32f1xx_it.c **** 
 205:Core/Src/stm32f1xx_it.c **** /**
 206:Core/Src/stm32f1xx_it.c ****   * @brief This function handles ADC1 and ADC2 global interrupts.
 207:Core/Src/stm32f1xx_it.c ****   */
 208:Core/Src/stm32f1xx_it.c **** void ADC1_2_IRQHandler(void)
 209:Core/Src/stm32f1xx_it.c **** {
 223              		.loc 1 209 1 view -0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227 0000 08B5     		push	{r3, lr}
 228              	.LCFI0:
 229              		.cfi_def_cfa_offset 8
 230              		.cfi_offset 3, -8
 231              		.cfi_offset 14, -4
 210:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN ADC1_2_IRQn 0 */
 211:Core/Src/stm32f1xx_it.c **** 
 212:Core/Src/stm32f1xx_it.c ****   /* USER CODE END ADC1_2_IRQn 0 */
 213:Core/Src/stm32f1xx_it.c ****   HAL_ADC_IRQHandler(&hadc1);
 232              		.loc 1 213 3 view .LVU27
 233 0002 0348     		ldr	r0, .L16
 234 0004 FFF7FEFF 		bl	HAL_ADC_IRQHandler
 235              	.LVL0:
 214:Core/Src/stm32f1xx_it.c ****   HAL_ADC_IRQHandler(&hadc2);
 236              		.loc 1 214 3 view .LVU28
 237 0008 0248     		ldr	r0, .L16+4
 238 000a FFF7FEFF 		bl	HAL_ADC_IRQHandler
 239              	.LVL1:
 215:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN ADC1_2_IRQn 1 */
 216:Core/Src/stm32f1xx_it.c **** 
 217:Core/Src/stm32f1xx_it.c ****   /* USER CODE END ADC1_2_IRQn 1 */
 218:Core/Src/stm32f1xx_it.c **** }
 240              		.loc 1 218 1 is_stmt 0 view .LVU29
 241 000e 08BD     		pop	{r3, pc}
 242              	.L17:
 243              		.align	2
 244              	.L16:
 245 0010 00000000 		.word	hadc1
 246 0014 00000000 		.word	hadc2
 247              		.cfi_endproc
 248              	.LFE74:
 250              		.section	.text.TIM1_UP_IRQHandler,"ax",%progbits
 251              		.align	1
 252              		.global	TIM1_UP_IRQHandler
 253              		.syntax unified
 254              		.thumb
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccpHng49.s 			page 9


 255              		.thumb_func
 256              		.fpu softvfp
 258              	TIM1_UP_IRQHandler:
 259              	.LFB75:
 219:Core/Src/stm32f1xx_it.c **** 
 220:Core/Src/stm32f1xx_it.c **** /**
 221:Core/Src/stm32f1xx_it.c ****   * @brief This function handles TIM1 update interrupt.
 222:Core/Src/stm32f1xx_it.c ****   */
 223:Core/Src/stm32f1xx_it.c **** void TIM1_UP_IRQHandler(void)
 224:Core/Src/stm32f1xx_it.c **** {
 260              		.loc 1 224 1 is_stmt 1 view -0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264 0000 08B5     		push	{r3, lr}
 265              	.LCFI1:
 266              		.cfi_def_cfa_offset 8
 267              		.cfi_offset 3, -8
 268              		.cfi_offset 14, -4
 225:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM1_UP_IRQn 0 */
 226:Core/Src/stm32f1xx_it.c **** 
 227:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM1_UP_IRQn 0 */
 228:Core/Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 269              		.loc 1 228 3 view .LVU31
 270 0002 0248     		ldr	r0, .L20
 271 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 272              	.LVL2:
 229:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM1_UP_IRQn 1 */
 230:Core/Src/stm32f1xx_it.c **** 
 231:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM1_UP_IRQn 1 */
 232:Core/Src/stm32f1xx_it.c **** }
 273              		.loc 1 232 1 is_stmt 0 view .LVU32
 274 0008 08BD     		pop	{r3, pc}
 275              	.L21:
 276 000a 00BF     		.align	2
 277              	.L20:
 278 000c 00000000 		.word	htim1
 279              		.cfi_endproc
 280              	.LFE75:
 282              		.section	.text.I2C1_EV_IRQHandler,"ax",%progbits
 283              		.align	1
 284              		.global	I2C1_EV_IRQHandler
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 288              		.fpu softvfp
 290              	I2C1_EV_IRQHandler:
 291              	.LFB76:
 233:Core/Src/stm32f1xx_it.c **** 
 234:Core/Src/stm32f1xx_it.c **** /**
 235:Core/Src/stm32f1xx_it.c ****   * @brief This function handles I2C1 event interrupt.
 236:Core/Src/stm32f1xx_it.c ****   */
 237:Core/Src/stm32f1xx_it.c **** void I2C1_EV_IRQHandler(void)
 238:Core/Src/stm32f1xx_it.c **** {
 292              		.loc 1 238 1 is_stmt 1 view -0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccpHng49.s 			page 10


 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296 0000 08B5     		push	{r3, lr}
 297              	.LCFI2:
 298              		.cfi_def_cfa_offset 8
 299              		.cfi_offset 3, -8
 300              		.cfi_offset 14, -4
 239:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN I2C1_EV_IRQn 0 */
 240:Core/Src/stm32f1xx_it.c **** 
 241:Core/Src/stm32f1xx_it.c ****   /* USER CODE END I2C1_EV_IRQn 0 */
 242:Core/Src/stm32f1xx_it.c ****   HAL_I2C_EV_IRQHandler(&hi2c1);
 301              		.loc 1 242 3 view .LVU34
 302 0002 0248     		ldr	r0, .L24
 303 0004 FFF7FEFF 		bl	HAL_I2C_EV_IRQHandler
 304              	.LVL3:
 243:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN I2C1_EV_IRQn 1 */
 244:Core/Src/stm32f1xx_it.c **** 
 245:Core/Src/stm32f1xx_it.c ****   /* USER CODE END I2C1_EV_IRQn 1 */
 246:Core/Src/stm32f1xx_it.c **** }
 305              		.loc 1 246 1 is_stmt 0 view .LVU35
 306 0008 08BD     		pop	{r3, pc}
 307              	.L25:
 308 000a 00BF     		.align	2
 309              	.L24:
 310 000c 00000000 		.word	hi2c1
 311              		.cfi_endproc
 312              	.LFE76:
 314              		.section	.text.I2C1_ER_IRQHandler,"ax",%progbits
 315              		.align	1
 316              		.global	I2C1_ER_IRQHandler
 317              		.syntax unified
 318              		.thumb
 319              		.thumb_func
 320              		.fpu softvfp
 322              	I2C1_ER_IRQHandler:
 323              	.LFB77:
 247:Core/Src/stm32f1xx_it.c **** 
 248:Core/Src/stm32f1xx_it.c **** /**
 249:Core/Src/stm32f1xx_it.c ****   * @brief This function handles I2C1 error interrupt.
 250:Core/Src/stm32f1xx_it.c ****   */
 251:Core/Src/stm32f1xx_it.c **** void I2C1_ER_IRQHandler(void)
 252:Core/Src/stm32f1xx_it.c **** {
 324              		.loc 1 252 1 is_stmt 1 view -0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328              		@ link register save eliminated.
 253:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN I2C1_ER_IRQn 0 */
 254:Core/Src/stm32f1xx_it.c **** 
 255:Core/Src/stm32f1xx_it.c ****   /* USER CODE END I2C1_ER_IRQn 0 */
 256:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN I2C1_ER_IRQn 1 */
 257:Core/Src/stm32f1xx_it.c **** 
 258:Core/Src/stm32f1xx_it.c ****   /* USER CODE END I2C1_ER_IRQn 1 */
 259:Core/Src/stm32f1xx_it.c **** }
 329              		.loc 1 259 1 view .LVU37
 330 0000 7047     		bx	lr
 331              		.cfi_endproc
 332              	.LFE77:
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccpHng49.s 			page 11


 334              		.section	.text.SPI2_IRQHandler,"ax",%progbits
 335              		.align	1
 336              		.global	SPI2_IRQHandler
 337              		.syntax unified
 338              		.thumb
 339              		.thumb_func
 340              		.fpu softvfp
 342              	SPI2_IRQHandler:
 343              	.LFB78:
 260:Core/Src/stm32f1xx_it.c **** 
 261:Core/Src/stm32f1xx_it.c **** /**
 262:Core/Src/stm32f1xx_it.c ****   * @brief This function handles SPI2 global interrupt.
 263:Core/Src/stm32f1xx_it.c ****   */
 264:Core/Src/stm32f1xx_it.c **** void SPI2_IRQHandler(void)
 265:Core/Src/stm32f1xx_it.c **** {
 344              		.loc 1 265 1 view -0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348 0000 08B5     		push	{r3, lr}
 349              	.LCFI3:
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 3, -8
 352              		.cfi_offset 14, -4
 266:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SPI2_IRQn 0 */
 267:Core/Src/stm32f1xx_it.c **** 
 268:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SPI2_IRQn 0 */
 269:Core/Src/stm32f1xx_it.c ****   HAL_SPI_IRQHandler(&hspi2);
 353              		.loc 1 269 3 view .LVU39
 354 0002 0248     		ldr	r0, .L29
 355 0004 FFF7FEFF 		bl	HAL_SPI_IRQHandler
 356              	.LVL4:
 270:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SPI2_IRQn 1 */
 271:Core/Src/stm32f1xx_it.c **** 
 272:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SPI2_IRQn 1 */
 273:Core/Src/stm32f1xx_it.c **** }
 357              		.loc 1 273 1 is_stmt 0 view .LVU40
 358 0008 08BD     		pop	{r3, pc}
 359              	.L30:
 360 000a 00BF     		.align	2
 361              	.L29:
 362 000c 00000000 		.word	hspi2
 363              		.cfi_endproc
 364              	.LFE78:
 366              		.text
 367              	.Letext0:
 368              		.file 2 "c:\\dev\\gcc-arm-none-eabi-9-2020-q2-update-win32\\arm-none-eabi\\include\\machine\\_defa
 369              		.file 3 "c:\\dev\\gcc-arm-none-eabi-9-2020-q2-update-win32\\arm-none-eabi\\include\\sys\\_stdint.h
 370              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 371              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 372              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 373              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 374              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 375              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 376              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 377              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 378              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccpHng49.s 			page 12


 379              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 380              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccpHng49.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_it.c
C:\Users\arada\AppData\Local\Temp\ccpHng49.s:16     .text.NMI_Handler:00000000 $t
C:\Users\arada\AppData\Local\Temp\ccpHng49.s:24     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\arada\AppData\Local\Temp\ccpHng49.s:38     .text.HardFault_Handler:00000000 $t
C:\Users\arada\AppData\Local\Temp\ccpHng49.s:45     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\arada\AppData\Local\Temp\ccpHng49.s:62     .text.MemManage_Handler:00000000 $t
C:\Users\arada\AppData\Local\Temp\ccpHng49.s:69     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\arada\AppData\Local\Temp\ccpHng49.s:86     .text.BusFault_Handler:00000000 $t
C:\Users\arada\AppData\Local\Temp\ccpHng49.s:93     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\arada\AppData\Local\Temp\ccpHng49.s:110    .text.UsageFault_Handler:00000000 $t
C:\Users\arada\AppData\Local\Temp\ccpHng49.s:117    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\arada\AppData\Local\Temp\ccpHng49.s:134    .text.SVC_Handler:00000000 $t
C:\Users\arada\AppData\Local\Temp\ccpHng49.s:141    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\arada\AppData\Local\Temp\ccpHng49.s:154    .text.DebugMon_Handler:00000000 $t
C:\Users\arada\AppData\Local\Temp\ccpHng49.s:161    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\arada\AppData\Local\Temp\ccpHng49.s:174    .text.PendSV_Handler:00000000 $t
C:\Users\arada\AppData\Local\Temp\ccpHng49.s:181    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\arada\AppData\Local\Temp\ccpHng49.s:194    .text.SysTick_Handler:00000000 $t
C:\Users\arada\AppData\Local\Temp\ccpHng49.s:201    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\arada\AppData\Local\Temp\ccpHng49.s:214    .text.ADC1_2_IRQHandler:00000000 $t
C:\Users\arada\AppData\Local\Temp\ccpHng49.s:221    .text.ADC1_2_IRQHandler:00000000 ADC1_2_IRQHandler
C:\Users\arada\AppData\Local\Temp\ccpHng49.s:245    .text.ADC1_2_IRQHandler:00000010 $d
C:\Users\arada\AppData\Local\Temp\ccpHng49.s:251    .text.TIM1_UP_IRQHandler:00000000 $t
C:\Users\arada\AppData\Local\Temp\ccpHng49.s:258    .text.TIM1_UP_IRQHandler:00000000 TIM1_UP_IRQHandler
C:\Users\arada\AppData\Local\Temp\ccpHng49.s:278    .text.TIM1_UP_IRQHandler:0000000c $d
C:\Users\arada\AppData\Local\Temp\ccpHng49.s:283    .text.I2C1_EV_IRQHandler:00000000 $t
C:\Users\arada\AppData\Local\Temp\ccpHng49.s:290    .text.I2C1_EV_IRQHandler:00000000 I2C1_EV_IRQHandler
C:\Users\arada\AppData\Local\Temp\ccpHng49.s:310    .text.I2C1_EV_IRQHandler:0000000c $d
C:\Users\arada\AppData\Local\Temp\ccpHng49.s:315    .text.I2C1_ER_IRQHandler:00000000 $t
C:\Users\arada\AppData\Local\Temp\ccpHng49.s:322    .text.I2C1_ER_IRQHandler:00000000 I2C1_ER_IRQHandler
C:\Users\arada\AppData\Local\Temp\ccpHng49.s:335    .text.SPI2_IRQHandler:00000000 $t
C:\Users\arada\AppData\Local\Temp\ccpHng49.s:342    .text.SPI2_IRQHandler:00000000 SPI2_IRQHandler
C:\Users\arada\AppData\Local\Temp\ccpHng49.s:362    .text.SPI2_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
HAL_ADC_IRQHandler
hadc1
hadc2
HAL_TIM_IRQHandler
htim1
HAL_I2C_EV_IRQHandler
hi2c1
HAL_SPI_IRQHandler
hspi2
