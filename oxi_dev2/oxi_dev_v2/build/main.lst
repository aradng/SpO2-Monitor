ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB77:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include <stdio.h>
  26:Core/Src/main.c **** #include "ssd1306/ssd1306.h"
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 2


  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  45:Core/Src/main.c **** ADC_HandleTypeDef hadc2;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** SPI_HandleTypeDef hspi2;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** UART_HandleTypeDef huart1;
  54:Core/Src/main.c **** UART_HandleTypeDef huart2;
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE BEGIN PV */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PV */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  61:Core/Src/main.c **** void SystemClock_Config(void);
  62:Core/Src/main.c **** static void MX_GPIO_Init(void);
  63:Core/Src/main.c **** static void MX_ADC1_Init(void);
  64:Core/Src/main.c **** static void MX_ADC2_Init(void);
  65:Core/Src/main.c **** static void MX_I2C1_Init(void);
  66:Core/Src/main.c **** static void MX_SPI2_Init(void);
  67:Core/Src/main.c **** static void MX_TIM2_Init(void);
  68:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  69:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  70:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* USER CODE END PFP */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  75:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /* USER CODE END 0 */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /**
  80:Core/Src/main.c ****   * @brief  The application entry point.
  81:Core/Src/main.c ****   * @retval int
  82:Core/Src/main.c ****   */
  83:Core/Src/main.c **** int main(void)
  84:Core/Src/main.c **** {
  85:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  86:Core/Src/main.c ****   /* USER CODE END 1 */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 3


  91:Core/Src/main.c ****   HAL_Init();
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE END Init */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* Configure the system clock */
  98:Core/Src/main.c ****   SystemClock_Config();
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* USER CODE END SysInit */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* Initialize all configured peripherals */
 105:Core/Src/main.c ****   MX_GPIO_Init();
 106:Core/Src/main.c ****   MX_ADC1_Init();
 107:Core/Src/main.c ****   MX_ADC2_Init();
 108:Core/Src/main.c ****   MX_I2C1_Init();
 109:Core/Src/main.c ****   MX_SPI2_Init();
 110:Core/Src/main.c ****   MX_TIM2_Init();
 111:Core/Src/main.c ****   MX_USART1_UART_Init();
 112:Core/Src/main.c ****   MX_USART2_UART_Init();
 113:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 114:Core/Src/main.c ****   HAL_ADCEx_Calibration_Start(&hadc1);
 115:Core/Src/main.c ****   uint32_t millis = 0;
 116:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8, GPIO_PIN_SET);
 117:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_9, GPIO_PIN_SET);
 118:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_SET);
 119:Core/Src/main.c ****   ssd1306_Init();
 120:Core/Src/main.c ****   /* USER CODE END 2 */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* Infinite loop */
 123:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 124:Core/Src/main.c ****   while (1)
 125:Core/Src/main.c ****   {
 126:Core/Src/main.c ****     /* USER CODE END WHILE */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 129:Core/Src/main.c ****     ssd1306_Fill(Black);
 130:Core/Src/main.c **** 		ssd1306_SetCursor(0  ,  0);
 131:Core/Src/main.c ****     //char out[100];
 132:Core/Src/main.c ****     //sprintf(out , "%i" , SSD1306_BUFFER_SIZE);
 133:Core/Src/main.c **** 		ssd1306_WriteString("HELLO", Font_11x18, White);
 134:Core/Src/main.c ****     if(HAL_GetTick() - millis > 100)
 135:Core/Src/main.c ****     {
 136:Core/Src/main.c ****       HAL_GPIO_TogglePin(BUILTIN_LED_GPIO_Port, BUILTIN_LED_Pin);
 137:Core/Src/main.c ****       millis = HAL_GetTick();
 138:Core/Src/main.c ****       ssd1306_UpdateScreen();
 139:Core/Src/main.c ****     }
 140:Core/Src/main.c ****   }
 141:Core/Src/main.c ****   /* USER CODE END 3 */
 142:Core/Src/main.c **** }
 143:Core/Src/main.c **** 
 144:Core/Src/main.c **** /**
 145:Core/Src/main.c ****   * @brief System Clock Configuration
 146:Core/Src/main.c ****   * @retval None
 147:Core/Src/main.c ****   */
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 4


 148:Core/Src/main.c **** void SystemClock_Config(void)
 149:Core/Src/main.c **** {
 150:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 151:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 152:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 155:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 156:Core/Src/main.c ****   */
 157:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 158:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 159:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 160:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 164:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 165:Core/Src/main.c ****   {
 166:Core/Src/main.c ****     Error_Handler();
 167:Core/Src/main.c ****   }
 168:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 169:Core/Src/main.c ****   */
 170:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 171:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 172:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 173:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 174:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 175:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 178:Core/Src/main.c ****   {
 179:Core/Src/main.c ****     Error_Handler();
 180:Core/Src/main.c ****   }
 181:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 182:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 183:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 184:Core/Src/main.c ****   {
 185:Core/Src/main.c ****     Error_Handler();
 186:Core/Src/main.c ****   }
 187:Core/Src/main.c **** }
 188:Core/Src/main.c **** 
 189:Core/Src/main.c **** /**
 190:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 191:Core/Src/main.c ****   * @param None
 192:Core/Src/main.c ****   * @retval None
 193:Core/Src/main.c ****   */
 194:Core/Src/main.c **** static void MX_ADC1_Init(void)
 195:Core/Src/main.c **** {
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 202:Core/Src/main.c **** 
 203:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 204:Core/Src/main.c **** 
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 5


 205:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 206:Core/Src/main.c ****   /** Common config
 207:Core/Src/main.c ****   */
 208:Core/Src/main.c ****   hadc1.Instance = ADC1;
 209:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 210:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 211:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 212:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 213:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 214:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 3;
 215:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 216:Core/Src/main.c ****   {
 217:Core/Src/main.c ****     Error_Handler();
 218:Core/Src/main.c ****   }
 219:Core/Src/main.c ****   /** Configure Regular Channel
 220:Core/Src/main.c ****   */
 221:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_0;
 222:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 223:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_239CYCLES_5;
 224:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 225:Core/Src/main.c ****   {
 226:Core/Src/main.c ****     Error_Handler();
 227:Core/Src/main.c ****   }
 228:Core/Src/main.c ****   /** Configure Regular Channel
 229:Core/Src/main.c ****   */
 230:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 231:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 232:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 233:Core/Src/main.c ****   {
 234:Core/Src/main.c ****     Error_Handler();
 235:Core/Src/main.c ****   }
 236:Core/Src/main.c ****   /** Configure Regular Channel
 237:Core/Src/main.c ****   */
 238:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 239:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 240:Core/Src/main.c ****   {
 241:Core/Src/main.c ****     Error_Handler();
 242:Core/Src/main.c ****   }
 243:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 244:Core/Src/main.c **** 
 245:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 246:Core/Src/main.c **** 
 247:Core/Src/main.c **** }
 248:Core/Src/main.c **** 
 249:Core/Src/main.c **** /**
 250:Core/Src/main.c ****   * @brief ADC2 Initialization Function
 251:Core/Src/main.c ****   * @param None
 252:Core/Src/main.c ****   * @retval None
 253:Core/Src/main.c ****   */
 254:Core/Src/main.c **** static void MX_ADC2_Init(void)
 255:Core/Src/main.c **** {
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****   /* USER CODE BEGIN ADC2_Init 0 */
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****   /* USER CODE END ADC2_Init 0 */
 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 6


 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   /* USER CODE BEGIN ADC2_Init 1 */
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****   /* USER CODE END ADC2_Init 1 */
 266:Core/Src/main.c ****   /** Common config
 267:Core/Src/main.c ****   */
 268:Core/Src/main.c ****   hadc2.Instance = ADC2;
 269:Core/Src/main.c ****   hadc2.Init.ScanConvMode = ADC_SCAN_ENABLE;
 270:Core/Src/main.c ****   hadc2.Init.ContinuousConvMode = DISABLE;
 271:Core/Src/main.c ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 272:Core/Src/main.c ****   hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 273:Core/Src/main.c ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 274:Core/Src/main.c ****   hadc2.Init.NbrOfConversion = 3;
 275:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 276:Core/Src/main.c ****   {
 277:Core/Src/main.c ****     Error_Handler();
 278:Core/Src/main.c ****   }
 279:Core/Src/main.c ****   /** Configure Regular Channel
 280:Core/Src/main.c ****   */
 281:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_4;
 282:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 283:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_239CYCLES_5;
 284:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 285:Core/Src/main.c ****   {
 286:Core/Src/main.c ****     Error_Handler();
 287:Core/Src/main.c ****   }
 288:Core/Src/main.c ****   /** Configure Regular Channel
 289:Core/Src/main.c ****   */
 290:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_5;
 291:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 292:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 293:Core/Src/main.c ****   {
 294:Core/Src/main.c ****     Error_Handler();
 295:Core/Src/main.c ****   }
 296:Core/Src/main.c ****   /** Configure Regular Channel
 297:Core/Src/main.c ****   */
 298:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_6;
 299:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 300:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 301:Core/Src/main.c ****   {
 302:Core/Src/main.c ****     Error_Handler();
 303:Core/Src/main.c ****   }
 304:Core/Src/main.c ****   /* USER CODE BEGIN ADC2_Init 2 */
 305:Core/Src/main.c **** 
 306:Core/Src/main.c ****   /* USER CODE END ADC2_Init 2 */
 307:Core/Src/main.c **** 
 308:Core/Src/main.c **** }
 309:Core/Src/main.c **** 
 310:Core/Src/main.c **** /**
 311:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 312:Core/Src/main.c ****   * @param None
 313:Core/Src/main.c ****   * @retval None
 314:Core/Src/main.c ****   */
 315:Core/Src/main.c **** static void MX_I2C1_Init(void)
 316:Core/Src/main.c **** {
 317:Core/Src/main.c **** 
 318:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 7


 319:Core/Src/main.c **** 
 320:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 321:Core/Src/main.c **** 
 322:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 323:Core/Src/main.c **** 
 324:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 325:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 326:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 400000;
 327:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 328:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 329:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 330:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 331:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 332:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 333:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 334:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 335:Core/Src/main.c ****   {
 336:Core/Src/main.c ****     Error_Handler();
 337:Core/Src/main.c ****   }
 338:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 339:Core/Src/main.c **** 
 340:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 341:Core/Src/main.c **** 
 342:Core/Src/main.c **** }
 343:Core/Src/main.c **** 
 344:Core/Src/main.c **** /**
 345:Core/Src/main.c ****   * @brief SPI2 Initialization Function
 346:Core/Src/main.c ****   * @param None
 347:Core/Src/main.c ****   * @retval None
 348:Core/Src/main.c ****   */
 349:Core/Src/main.c **** static void MX_SPI2_Init(void)
 350:Core/Src/main.c **** {
 351:Core/Src/main.c **** 
 352:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 0 */
 353:Core/Src/main.c **** 
 354:Core/Src/main.c ****   /* USER CODE END SPI2_Init 0 */
 355:Core/Src/main.c **** 
 356:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 1 */
 357:Core/Src/main.c **** 
 358:Core/Src/main.c ****   /* USER CODE END SPI2_Init 1 */
 359:Core/Src/main.c ****   /* SPI2 parameter configuration*/
 360:Core/Src/main.c ****   hspi2.Instance = SPI2;
 361:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 362:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 363:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 364:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 365:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 366:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 367:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 368:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 369:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 370:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 371:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 372:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 373:Core/Src/main.c ****   {
 374:Core/Src/main.c ****     Error_Handler();
 375:Core/Src/main.c ****   }
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 8


 376:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 2 */
 377:Core/Src/main.c **** 
 378:Core/Src/main.c ****   /* USER CODE END SPI2_Init 2 */
 379:Core/Src/main.c **** 
 380:Core/Src/main.c **** }
 381:Core/Src/main.c **** 
 382:Core/Src/main.c **** /**
 383:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 384:Core/Src/main.c ****   * @param None
 385:Core/Src/main.c ****   * @retval None
 386:Core/Src/main.c ****   */
 387:Core/Src/main.c **** static void MX_TIM2_Init(void)
 388:Core/Src/main.c **** {
 389:Core/Src/main.c **** 
 390:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 391:Core/Src/main.c **** 
 392:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 393:Core/Src/main.c **** 
 394:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 395:Core/Src/main.c ****   TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 396:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 397:Core/Src/main.c **** 
 398:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 399:Core/Src/main.c **** 
 400:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 401:Core/Src/main.c ****   htim2.Instance = TIM2;
 402:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 403:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 404:Core/Src/main.c ****   htim2.Init.Period = 65535;
 405:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 406:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 407:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 408:Core/Src/main.c ****   {
 409:Core/Src/main.c ****     Error_Handler();
 410:Core/Src/main.c ****   }
 411:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 412:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 413:Core/Src/main.c ****   {
 414:Core/Src/main.c ****     Error_Handler();
 415:Core/Src/main.c ****   }
 416:Core/Src/main.c ****   sSlaveConfig.SlaveMode = TIM_SLAVEMODE_DISABLE;
 417:Core/Src/main.c ****   sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 418:Core/Src/main.c ****   if (HAL_TIM_SlaveConfigSynchro(&htim2, &sSlaveConfig) != HAL_OK)
 419:Core/Src/main.c ****   {
 420:Core/Src/main.c ****     Error_Handler();
 421:Core/Src/main.c ****   }
 422:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 423:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 424:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 425:Core/Src/main.c ****   {
 426:Core/Src/main.c ****     Error_Handler();
 427:Core/Src/main.c ****   }
 428:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 429:Core/Src/main.c **** 
 430:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 431:Core/Src/main.c **** 
 432:Core/Src/main.c **** }
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 9


 433:Core/Src/main.c **** 
 434:Core/Src/main.c **** /**
 435:Core/Src/main.c ****   * @brief USART1 Initialization Function
 436:Core/Src/main.c ****   * @param None
 437:Core/Src/main.c ****   * @retval None
 438:Core/Src/main.c ****   */
 439:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 440:Core/Src/main.c **** {
 441:Core/Src/main.c **** 
 442:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 443:Core/Src/main.c **** 
 444:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 445:Core/Src/main.c **** 
 446:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 447:Core/Src/main.c **** 
 448:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 449:Core/Src/main.c ****   huart1.Instance = USART1;
 450:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 451:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 452:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 453:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 454:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 455:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 456:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 457:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 458:Core/Src/main.c ****   {
 459:Core/Src/main.c ****     Error_Handler();
 460:Core/Src/main.c ****   }
 461:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 462:Core/Src/main.c **** 
 463:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 464:Core/Src/main.c **** 
 465:Core/Src/main.c **** }
 466:Core/Src/main.c **** 
 467:Core/Src/main.c **** /**
 468:Core/Src/main.c ****   * @brief USART2 Initialization Function
 469:Core/Src/main.c ****   * @param None
 470:Core/Src/main.c ****   * @retval None
 471:Core/Src/main.c ****   */
 472:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 473:Core/Src/main.c **** {
 474:Core/Src/main.c **** 
 475:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 476:Core/Src/main.c **** 
 477:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 478:Core/Src/main.c **** 
 479:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 480:Core/Src/main.c **** 
 481:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 482:Core/Src/main.c ****   huart2.Instance = USART2;
 483:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 484:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 485:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 486:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 487:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 488:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 489:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 10


 490:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 491:Core/Src/main.c ****   {
 492:Core/Src/main.c ****     Error_Handler();
 493:Core/Src/main.c ****   }
 494:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 495:Core/Src/main.c **** 
 496:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 497:Core/Src/main.c **** 
 498:Core/Src/main.c **** }
 499:Core/Src/main.c **** 
 500:Core/Src/main.c **** /**
 501:Core/Src/main.c ****   * @brief GPIO Initialization Function
 502:Core/Src/main.c ****   * @param None
 503:Core/Src/main.c ****   * @retval None
 504:Core/Src/main.c ****   */
 505:Core/Src/main.c **** static void MX_GPIO_Init(void)
 506:Core/Src/main.c **** {
  26              		.loc 1 506 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 20
  33              		.cfi_offset 4, -20
  34              		.cfi_offset 5, -16
  35              		.cfi_offset 6, -12
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 56
 507:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 507 3 view .LVU1
  42              		.loc 1 507 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0494     		str	r4, [sp, #16]
  45 0008 0594     		str	r4, [sp, #20]
  46 000a 0694     		str	r4, [sp, #24]
  47 000c 0794     		str	r4, [sp, #28]
 508:Core/Src/main.c **** 
 509:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 510:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  48              		.loc 1 510 3 is_stmt 1 view .LVU3
  49              	.LBB2:
  50              		.loc 1 510 3 view .LVU4
  51              		.loc 1 510 3 view .LVU5
  52 000e 1E4B     		ldr	r3, .L3
  53 0010 9A69     		ldr	r2, [r3, #24]
  54 0012 42F02002 		orr	r2, r2, #32
  55 0016 9A61     		str	r2, [r3, #24]
  56              		.loc 1 510 3 view .LVU6
  57 0018 9A69     		ldr	r2, [r3, #24]
  58 001a 02F02002 		and	r2, r2, #32
  59 001e 0192     		str	r2, [sp, #4]
  60              		.loc 1 510 3 view .LVU7
  61 0020 019A     		ldr	r2, [sp, #4]
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 11


  62              	.LBE2:
  63              		.loc 1 510 3 view .LVU8
 511:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  64              		.loc 1 511 3 view .LVU9
  65              	.LBB3:
  66              		.loc 1 511 3 view .LVU10
  67              		.loc 1 511 3 view .LVU11
  68 0022 9A69     		ldr	r2, [r3, #24]
  69 0024 42F00402 		orr	r2, r2, #4
  70 0028 9A61     		str	r2, [r3, #24]
  71              		.loc 1 511 3 view .LVU12
  72 002a 9A69     		ldr	r2, [r3, #24]
  73 002c 02F00402 		and	r2, r2, #4
  74 0030 0292     		str	r2, [sp, #8]
  75              		.loc 1 511 3 view .LVU13
  76 0032 029A     		ldr	r2, [sp, #8]
  77              	.LBE3:
  78              		.loc 1 511 3 view .LVU14
 512:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  79              		.loc 1 512 3 view .LVU15
  80              	.LBB4:
  81              		.loc 1 512 3 view .LVU16
  82              		.loc 1 512 3 view .LVU17
  83 0034 9A69     		ldr	r2, [r3, #24]
  84 0036 42F00802 		orr	r2, r2, #8
  85 003a 9A61     		str	r2, [r3, #24]
  86              		.loc 1 512 3 view .LVU18
  87 003c 9B69     		ldr	r3, [r3, #24]
  88 003e 03F00803 		and	r3, r3, #8
  89 0042 0393     		str	r3, [sp, #12]
  90              		.loc 1 512 3 view .LVU19
  91 0044 039B     		ldr	r3, [sp, #12]
  92              	.LBE4:
  93              		.loc 1 512 3 view .LVU20
 513:Core/Src/main.c **** 
 514:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 515:Core/Src/main.c ****   HAL_GPIO_WritePin(BUILTIN_LED_GPIO_Port, BUILTIN_LED_Pin, GPIO_PIN_RESET);
  94              		.loc 1 515 3 view .LVU21
  95 0046 114F     		ldr	r7, .L3+4
  96 0048 2246     		mov	r2, r4
  97 004a 8021     		movs	r1, #128
  98 004c 3846     		mov	r0, r7
  99 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
 100              	.LVL0:
 516:Core/Src/main.c **** 
 517:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 518:Core/Src/main.c ****   HAL_GPIO_WritePin(OLED_RES_GPIO_Port, OLED_RES_Pin, GPIO_PIN_SET);
 101              		.loc 1 518 3 view .LVU22
 102 0052 0F4E     		ldr	r6, .L3+8
 103 0054 0122     		movs	r2, #1
 104 0056 0221     		movs	r1, #2
 105 0058 3046     		mov	r0, r6
 106 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
 107              	.LVL1:
 519:Core/Src/main.c **** 
 520:Core/Src/main.c ****   /*Configure GPIO pin : BUILTIN_LED_Pin */
 521:Core/Src/main.c ****   GPIO_InitStruct.Pin = BUILTIN_LED_Pin;
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 12


 108              		.loc 1 521 3 view .LVU23
 109              		.loc 1 521 23 is_stmt 0 view .LVU24
 110 005e 8023     		movs	r3, #128
 111 0060 0493     		str	r3, [sp, #16]
 522:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 112              		.loc 1 522 3 is_stmt 1 view .LVU25
 113              		.loc 1 522 24 is_stmt 0 view .LVU26
 114 0062 0125     		movs	r5, #1
 115 0064 0595     		str	r5, [sp, #20]
 523:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 116              		.loc 1 523 3 is_stmt 1 view .LVU27
 117              		.loc 1 523 24 is_stmt 0 view .LVU28
 118 0066 0694     		str	r4, [sp, #24]
 524:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 119              		.loc 1 524 3 is_stmt 1 view .LVU29
 120              		.loc 1 524 25 is_stmt 0 view .LVU30
 121 0068 0224     		movs	r4, #2
 122 006a 0794     		str	r4, [sp, #28]
 525:Core/Src/main.c ****   HAL_GPIO_Init(BUILTIN_LED_GPIO_Port, &GPIO_InitStruct);
 123              		.loc 1 525 3 is_stmt 1 view .LVU31
 124 006c 04A9     		add	r1, sp, #16
 125 006e 3846     		mov	r0, r7
 126 0070 FFF7FEFF 		bl	HAL_GPIO_Init
 127              	.LVL2:
 526:Core/Src/main.c **** 
 527:Core/Src/main.c ****   /*Configure GPIO pin : OLED_RES_Pin */
 528:Core/Src/main.c ****   GPIO_InitStruct.Pin = OLED_RES_Pin;
 128              		.loc 1 528 3 view .LVU32
 129              		.loc 1 528 23 is_stmt 0 view .LVU33
 130 0074 0494     		str	r4, [sp, #16]
 529:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 131              		.loc 1 529 3 is_stmt 1 view .LVU34
 132              		.loc 1 529 24 is_stmt 0 view .LVU35
 133 0076 0595     		str	r5, [sp, #20]
 530:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 134              		.loc 1 530 3 is_stmt 1 view .LVU36
 135              		.loc 1 530 24 is_stmt 0 view .LVU37
 136 0078 0695     		str	r5, [sp, #24]
 531:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 137              		.loc 1 531 3 is_stmt 1 view .LVU38
 138              		.loc 1 531 25 is_stmt 0 view .LVU39
 139 007a 0794     		str	r4, [sp, #28]
 532:Core/Src/main.c ****   HAL_GPIO_Init(OLED_RES_GPIO_Port, &GPIO_InitStruct);
 140              		.loc 1 532 3 is_stmt 1 view .LVU40
 141 007c 04A9     		add	r1, sp, #16
 142 007e 3046     		mov	r0, r6
 143 0080 FFF7FEFF 		bl	HAL_GPIO_Init
 144              	.LVL3:
 533:Core/Src/main.c **** 
 534:Core/Src/main.c **** }
 145              		.loc 1 534 1 is_stmt 0 view .LVU41
 146 0084 09B0     		add	sp, sp, #36
 147              	.LCFI2:
 148              		.cfi_def_cfa_offset 20
 149              		@ sp needed
 150 0086 F0BD     		pop	{r4, r5, r6, r7, pc}
 151              	.L4:
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 13


 152              		.align	2
 153              	.L3:
 154 0088 00100240 		.word	1073876992
 155 008c 00080140 		.word	1073809408
 156 0090 000C0140 		.word	1073810432
 157              		.cfi_endproc
 158              	.LFE77:
 160              		.section	.text.MX_ADC1_Init,"ax",%progbits
 161              		.align	1
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu softvfp
 167              	MX_ADC1_Init:
 168              	.LFB70:
 195:Core/Src/main.c **** 
 169              		.loc 1 195 1 is_stmt 1 view -0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 16
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 174              	.LCFI3:
 175              		.cfi_def_cfa_offset 20
 176              		.cfi_offset 4, -20
 177              		.cfi_offset 5, -16
 178              		.cfi_offset 6, -12
 179              		.cfi_offset 7, -8
 180              		.cfi_offset 14, -4
 181 0002 85B0     		sub	sp, sp, #20
 182              	.LCFI4:
 183              		.cfi_def_cfa_offset 40
 201:Core/Src/main.c **** 
 184              		.loc 1 201 3 view .LVU43
 201:Core/Src/main.c **** 
 185              		.loc 1 201 26 is_stmt 0 view .LVU44
 186 0004 0025     		movs	r5, #0
 187 0006 0195     		str	r5, [sp, #4]
 188 0008 0295     		str	r5, [sp, #8]
 189 000a 0395     		str	r5, [sp, #12]
 208:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 190              		.loc 1 208 3 is_stmt 1 view .LVU45
 208:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 191              		.loc 1 208 18 is_stmt 0 view .LVU46
 192 000c 134C     		ldr	r4, .L7
 193 000e 144B     		ldr	r3, .L7+4
 194 0010 2360     		str	r3, [r4]
 209:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 195              		.loc 1 209 3 is_stmt 1 view .LVU47
 209:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 196              		.loc 1 209 27 is_stmt 0 view .LVU48
 197 0012 4FF48073 		mov	r3, #256
 198 0016 A360     		str	r3, [r4, #8]
 210:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 199              		.loc 1 210 3 is_stmt 1 view .LVU49
 210:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 200              		.loc 1 210 33 is_stmt 0 view .LVU50
 201 0018 0127     		movs	r7, #1
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 14


 202 001a 2773     		strb	r7, [r4, #12]
 211:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 203              		.loc 1 211 3 is_stmt 1 view .LVU51
 211:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 204              		.loc 1 211 36 is_stmt 0 view .LVU52
 205 001c 2575     		strb	r5, [r4, #20]
 212:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 206              		.loc 1 212 3 is_stmt 1 view .LVU53
 212:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 207              		.loc 1 212 31 is_stmt 0 view .LVU54
 208 001e 4FF46023 		mov	r3, #917504
 209 0022 E361     		str	r3, [r4, #28]
 213:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 3;
 210              		.loc 1 213 3 is_stmt 1 view .LVU55
 213:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 3;
 211              		.loc 1 213 24 is_stmt 0 view .LVU56
 212 0024 6560     		str	r5, [r4, #4]
 214:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 213              		.loc 1 214 3 is_stmt 1 view .LVU57
 214:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 214              		.loc 1 214 30 is_stmt 0 view .LVU58
 215 0026 0326     		movs	r6, #3
 216 0028 2661     		str	r6, [r4, #16]
 215:Core/Src/main.c ****   {
 217              		.loc 1 215 3 is_stmt 1 view .LVU59
 215:Core/Src/main.c ****   {
 218              		.loc 1 215 7 is_stmt 0 view .LVU60
 219 002a 2046     		mov	r0, r4
 220 002c FFF7FEFF 		bl	HAL_ADC_Init
 221              	.LVL4:
 221:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 222              		.loc 1 221 3 is_stmt 1 view .LVU61
 221:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 223              		.loc 1 221 19 is_stmt 0 view .LVU62
 224 0030 0195     		str	r5, [sp, #4]
 222:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_239CYCLES_5;
 225              		.loc 1 222 3 is_stmt 1 view .LVU63
 222:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_239CYCLES_5;
 226              		.loc 1 222 16 is_stmt 0 view .LVU64
 227 0032 0297     		str	r7, [sp, #8]
 223:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 228              		.loc 1 223 3 is_stmt 1 view .LVU65
 223:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 229              		.loc 1 223 24 is_stmt 0 view .LVU66
 230 0034 0723     		movs	r3, #7
 231 0036 0393     		str	r3, [sp, #12]
 224:Core/Src/main.c ****   {
 232              		.loc 1 224 3 is_stmt 1 view .LVU67
 224:Core/Src/main.c ****   {
 233              		.loc 1 224 7 is_stmt 0 view .LVU68
 234 0038 01A9     		add	r1, sp, #4
 235 003a 2046     		mov	r0, r4
 236 003c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 237              	.LVL5:
 230:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 238              		.loc 1 230 3 is_stmt 1 view .LVU69
 230:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 15


 239              		.loc 1 230 16 is_stmt 0 view .LVU70
 240 0040 0223     		movs	r3, #2
 241 0042 0293     		str	r3, [sp, #8]
 231:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 242              		.loc 1 231 3 is_stmt 1 view .LVU71
 231:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 243              		.loc 1 231 24 is_stmt 0 view .LVU72
 244 0044 0395     		str	r5, [sp, #12]
 232:Core/Src/main.c ****   {
 245              		.loc 1 232 3 is_stmt 1 view .LVU73
 232:Core/Src/main.c ****   {
 246              		.loc 1 232 7 is_stmt 0 view .LVU74
 247 0046 01A9     		add	r1, sp, #4
 248 0048 2046     		mov	r0, r4
 249 004a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 250              	.LVL6:
 238:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 251              		.loc 1 238 3 is_stmt 1 view .LVU75
 238:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 252              		.loc 1 238 16 is_stmt 0 view .LVU76
 253 004e 0296     		str	r6, [sp, #8]
 239:Core/Src/main.c ****   {
 254              		.loc 1 239 3 is_stmt 1 view .LVU77
 239:Core/Src/main.c ****   {
 255              		.loc 1 239 7 is_stmt 0 view .LVU78
 256 0050 01A9     		add	r1, sp, #4
 257 0052 2046     		mov	r0, r4
 258 0054 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 259              	.LVL7:
 247:Core/Src/main.c **** 
 260              		.loc 1 247 1 view .LVU79
 261 0058 05B0     		add	sp, sp, #20
 262              	.LCFI5:
 263              		.cfi_def_cfa_offset 20
 264              		@ sp needed
 265 005a F0BD     		pop	{r4, r5, r6, r7, pc}
 266              	.L8:
 267              		.align	2
 268              	.L7:
 269 005c 00000000 		.word	hadc1
 270 0060 00240140 		.word	1073816576
 271              		.cfi_endproc
 272              	.LFE70:
 274              		.section	.text.MX_ADC2_Init,"ax",%progbits
 275              		.align	1
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 279              		.fpu softvfp
 281              	MX_ADC2_Init:
 282              	.LFB71:
 255:Core/Src/main.c **** 
 283              		.loc 1 255 1 is_stmt 1 view -0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 16
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287 0000 30B5     		push	{r4, r5, lr}
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 16


 288              	.LCFI6:
 289              		.cfi_def_cfa_offset 12
 290              		.cfi_offset 4, -12
 291              		.cfi_offset 5, -8
 292              		.cfi_offset 14, -4
 293 0002 85B0     		sub	sp, sp, #20
 294              	.LCFI7:
 295              		.cfi_def_cfa_offset 32
 261:Core/Src/main.c **** 
 296              		.loc 1 261 3 view .LVU81
 261:Core/Src/main.c **** 
 297              		.loc 1 261 26 is_stmt 0 view .LVU82
 298 0004 0023     		movs	r3, #0
 299 0006 0193     		str	r3, [sp, #4]
 300 0008 0293     		str	r3, [sp, #8]
 301 000a 0393     		str	r3, [sp, #12]
 268:Core/Src/main.c ****   hadc2.Init.ScanConvMode = ADC_SCAN_ENABLE;
 302              		.loc 1 268 3 is_stmt 1 view .LVU83
 268:Core/Src/main.c ****   hadc2.Init.ScanConvMode = ADC_SCAN_ENABLE;
 303              		.loc 1 268 18 is_stmt 0 view .LVU84
 304 000c 154C     		ldr	r4, .L11
 305 000e 164A     		ldr	r2, .L11+4
 306 0010 2260     		str	r2, [r4]
 269:Core/Src/main.c ****   hadc2.Init.ContinuousConvMode = DISABLE;
 307              		.loc 1 269 3 is_stmt 1 view .LVU85
 269:Core/Src/main.c ****   hadc2.Init.ContinuousConvMode = DISABLE;
 308              		.loc 1 269 27 is_stmt 0 view .LVU86
 309 0012 4FF48072 		mov	r2, #256
 310 0016 A260     		str	r2, [r4, #8]
 270:Core/Src/main.c ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 311              		.loc 1 270 3 is_stmt 1 view .LVU87
 270:Core/Src/main.c ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 312              		.loc 1 270 33 is_stmt 0 view .LVU88
 313 0018 2373     		strb	r3, [r4, #12]
 271:Core/Src/main.c ****   hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 314              		.loc 1 271 3 is_stmt 1 view .LVU89
 271:Core/Src/main.c ****   hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 315              		.loc 1 271 36 is_stmt 0 view .LVU90
 316 001a 2375     		strb	r3, [r4, #20]
 272:Core/Src/main.c ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 317              		.loc 1 272 3 is_stmt 1 view .LVU91
 272:Core/Src/main.c ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 318              		.loc 1 272 31 is_stmt 0 view .LVU92
 319 001c 4FF46022 		mov	r2, #917504
 320 0020 E261     		str	r2, [r4, #28]
 273:Core/Src/main.c ****   hadc2.Init.NbrOfConversion = 3;
 321              		.loc 1 273 3 is_stmt 1 view .LVU93
 273:Core/Src/main.c ****   hadc2.Init.NbrOfConversion = 3;
 322              		.loc 1 273 24 is_stmt 0 view .LVU94
 323 0022 6360     		str	r3, [r4, #4]
 274:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 324              		.loc 1 274 3 is_stmt 1 view .LVU95
 274:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 325              		.loc 1 274 30 is_stmt 0 view .LVU96
 326 0024 0325     		movs	r5, #3
 327 0026 2561     		str	r5, [r4, #16]
 275:Core/Src/main.c ****   {
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 17


 328              		.loc 1 275 3 is_stmt 1 view .LVU97
 275:Core/Src/main.c ****   {
 329              		.loc 1 275 7 is_stmt 0 view .LVU98
 330 0028 2046     		mov	r0, r4
 331 002a FFF7FEFF 		bl	HAL_ADC_Init
 332              	.LVL8:
 281:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 333              		.loc 1 281 3 is_stmt 1 view .LVU99
 281:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 334              		.loc 1 281 19 is_stmt 0 view .LVU100
 335 002e 0423     		movs	r3, #4
 336 0030 0193     		str	r3, [sp, #4]
 282:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_239CYCLES_5;
 337              		.loc 1 282 3 is_stmt 1 view .LVU101
 282:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_239CYCLES_5;
 338              		.loc 1 282 16 is_stmt 0 view .LVU102
 339 0032 0123     		movs	r3, #1
 340 0034 0293     		str	r3, [sp, #8]
 283:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 341              		.loc 1 283 3 is_stmt 1 view .LVU103
 283:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 342              		.loc 1 283 24 is_stmt 0 view .LVU104
 343 0036 0723     		movs	r3, #7
 344 0038 0393     		str	r3, [sp, #12]
 284:Core/Src/main.c ****   {
 345              		.loc 1 284 3 is_stmt 1 view .LVU105
 284:Core/Src/main.c ****   {
 346              		.loc 1 284 7 is_stmt 0 view .LVU106
 347 003a 01A9     		add	r1, sp, #4
 348 003c 2046     		mov	r0, r4
 349 003e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 350              	.LVL9:
 290:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 351              		.loc 1 290 3 is_stmt 1 view .LVU107
 290:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 352              		.loc 1 290 19 is_stmt 0 view .LVU108
 353 0042 0523     		movs	r3, #5
 354 0044 0193     		str	r3, [sp, #4]
 291:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 355              		.loc 1 291 3 is_stmt 1 view .LVU109
 291:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 356              		.loc 1 291 16 is_stmt 0 view .LVU110
 357 0046 0223     		movs	r3, #2
 358 0048 0293     		str	r3, [sp, #8]
 292:Core/Src/main.c ****   {
 359              		.loc 1 292 3 is_stmt 1 view .LVU111
 292:Core/Src/main.c ****   {
 360              		.loc 1 292 7 is_stmt 0 view .LVU112
 361 004a 01A9     		add	r1, sp, #4
 362 004c 2046     		mov	r0, r4
 363 004e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 364              	.LVL10:
 298:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 365              		.loc 1 298 3 is_stmt 1 view .LVU113
 298:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 366              		.loc 1 298 19 is_stmt 0 view .LVU114
 367 0052 0623     		movs	r3, #6
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 18


 368 0054 0193     		str	r3, [sp, #4]
 299:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 369              		.loc 1 299 3 is_stmt 1 view .LVU115
 299:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 370              		.loc 1 299 16 is_stmt 0 view .LVU116
 371 0056 0295     		str	r5, [sp, #8]
 300:Core/Src/main.c ****   {
 372              		.loc 1 300 3 is_stmt 1 view .LVU117
 300:Core/Src/main.c ****   {
 373              		.loc 1 300 7 is_stmt 0 view .LVU118
 374 0058 01A9     		add	r1, sp, #4
 375 005a 2046     		mov	r0, r4
 376 005c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 377              	.LVL11:
 308:Core/Src/main.c **** 
 378              		.loc 1 308 1 view .LVU119
 379 0060 05B0     		add	sp, sp, #20
 380              	.LCFI8:
 381              		.cfi_def_cfa_offset 12
 382              		@ sp needed
 383 0062 30BD     		pop	{r4, r5, pc}
 384              	.L12:
 385              		.align	2
 386              	.L11:
 387 0064 00000000 		.word	hadc2
 388 0068 00280140 		.word	1073817600
 389              		.cfi_endproc
 390              	.LFE71:
 392              		.section	.text.MX_I2C1_Init,"ax",%progbits
 393              		.align	1
 394              		.syntax unified
 395              		.thumb
 396              		.thumb_func
 397              		.fpu softvfp
 399              	MX_I2C1_Init:
 400              	.LFB72:
 316:Core/Src/main.c **** 
 401              		.loc 1 316 1 is_stmt 1 view -0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 0
 404              		@ frame_needed = 0, uses_anonymous_args = 0
 405 0000 08B5     		push	{r3, lr}
 406              	.LCFI9:
 407              		.cfi_def_cfa_offset 8
 408              		.cfi_offset 3, -8
 409              		.cfi_offset 14, -4
 325:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 400000;
 410              		.loc 1 325 3 view .LVU121
 325:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 400000;
 411              		.loc 1 325 18 is_stmt 0 view .LVU122
 412 0002 0948     		ldr	r0, .L15
 413 0004 094B     		ldr	r3, .L15+4
 414 0006 0360     		str	r3, [r0]
 326:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 415              		.loc 1 326 3 is_stmt 1 view .LVU123
 326:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 416              		.loc 1 326 25 is_stmt 0 view .LVU124
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 19


 417 0008 094B     		ldr	r3, .L15+8
 418 000a 4360     		str	r3, [r0, #4]
 327:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 419              		.loc 1 327 3 is_stmt 1 view .LVU125
 327:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 420              		.loc 1 327 24 is_stmt 0 view .LVU126
 421 000c 0023     		movs	r3, #0
 422 000e 8360     		str	r3, [r0, #8]
 328:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 423              		.loc 1 328 3 is_stmt 1 view .LVU127
 328:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 424              		.loc 1 328 26 is_stmt 0 view .LVU128
 425 0010 C360     		str	r3, [r0, #12]
 329:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 426              		.loc 1 329 3 is_stmt 1 view .LVU129
 329:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 427              		.loc 1 329 29 is_stmt 0 view .LVU130
 428 0012 4FF48042 		mov	r2, #16384
 429 0016 0261     		str	r2, [r0, #16]
 330:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 430              		.loc 1 330 3 is_stmt 1 view .LVU131
 330:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 431              		.loc 1 330 30 is_stmt 0 view .LVU132
 432 0018 4361     		str	r3, [r0, #20]
 331:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 433              		.loc 1 331 3 is_stmt 1 view .LVU133
 331:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 434              		.loc 1 331 26 is_stmt 0 view .LVU134
 435 001a 8361     		str	r3, [r0, #24]
 332:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 436              		.loc 1 332 3 is_stmt 1 view .LVU135
 332:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 437              		.loc 1 332 30 is_stmt 0 view .LVU136
 438 001c C361     		str	r3, [r0, #28]
 333:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 439              		.loc 1 333 3 is_stmt 1 view .LVU137
 333:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 440              		.loc 1 333 28 is_stmt 0 view .LVU138
 441 001e 0362     		str	r3, [r0, #32]
 334:Core/Src/main.c ****   {
 442              		.loc 1 334 3 is_stmt 1 view .LVU139
 334:Core/Src/main.c ****   {
 443              		.loc 1 334 7 is_stmt 0 view .LVU140
 444 0020 FFF7FEFF 		bl	HAL_I2C_Init
 445              	.LVL12:
 342:Core/Src/main.c **** 
 446              		.loc 1 342 1 view .LVU141
 447 0024 08BD     		pop	{r3, pc}
 448              	.L16:
 449 0026 00BF     		.align	2
 450              	.L15:
 451 0028 00000000 		.word	hi2c1
 452 002c 00540040 		.word	1073763328
 453 0030 801A0600 		.word	400000
 454              		.cfi_endproc
 455              	.LFE72:
 457              		.section	.text.MX_SPI2_Init,"ax",%progbits
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 20


 458              		.align	1
 459              		.syntax unified
 460              		.thumb
 461              		.thumb_func
 462              		.fpu softvfp
 464              	MX_SPI2_Init:
 465              	.LFB73:
 350:Core/Src/main.c **** 
 466              		.loc 1 350 1 is_stmt 1 view -0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 0
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470 0000 08B5     		push	{r3, lr}
 471              	.LCFI10:
 472              		.cfi_def_cfa_offset 8
 473              		.cfi_offset 3, -8
 474              		.cfi_offset 14, -4
 360:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 475              		.loc 1 360 3 view .LVU143
 360:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 476              		.loc 1 360 18 is_stmt 0 view .LVU144
 477 0002 0B48     		ldr	r0, .L19
 478 0004 0B4B     		ldr	r3, .L19+4
 479 0006 0360     		str	r3, [r0]
 361:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 480              		.loc 1 361 3 is_stmt 1 view .LVU145
 361:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 481              		.loc 1 361 19 is_stmt 0 view .LVU146
 482 0008 4FF48273 		mov	r3, #260
 483 000c 4360     		str	r3, [r0, #4]
 362:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 484              		.loc 1 362 3 is_stmt 1 view .LVU147
 362:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 485              		.loc 1 362 24 is_stmt 0 view .LVU148
 486 000e 0023     		movs	r3, #0
 487 0010 8360     		str	r3, [r0, #8]
 363:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 488              		.loc 1 363 3 is_stmt 1 view .LVU149
 363:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 489              		.loc 1 363 23 is_stmt 0 view .LVU150
 490 0012 C360     		str	r3, [r0, #12]
 364:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 491              		.loc 1 364 3 is_stmt 1 view .LVU151
 364:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 492              		.loc 1 364 26 is_stmt 0 view .LVU152
 493 0014 0361     		str	r3, [r0, #16]
 365:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 494              		.loc 1 365 3 is_stmt 1 view .LVU153
 365:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 495              		.loc 1 365 23 is_stmt 0 view .LVU154
 496 0016 4361     		str	r3, [r0, #20]
 366:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 497              		.loc 1 366 3 is_stmt 1 view .LVU155
 366:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 498              		.loc 1 366 18 is_stmt 0 view .LVU156
 499 0018 4FF40072 		mov	r2, #512
 500 001c 8261     		str	r2, [r0, #24]
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 21


 367:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 501              		.loc 1 367 3 is_stmt 1 view .LVU157
 367:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 502              		.loc 1 367 32 is_stmt 0 view .LVU158
 503 001e C361     		str	r3, [r0, #28]
 368:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 504              		.loc 1 368 3 is_stmt 1 view .LVU159
 368:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 505              		.loc 1 368 23 is_stmt 0 view .LVU160
 506 0020 0362     		str	r3, [r0, #32]
 369:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 507              		.loc 1 369 3 is_stmt 1 view .LVU161
 369:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 508              		.loc 1 369 21 is_stmt 0 view .LVU162
 509 0022 4362     		str	r3, [r0, #36]
 370:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 510              		.loc 1 370 3 is_stmt 1 view .LVU163
 370:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 511              		.loc 1 370 29 is_stmt 0 view .LVU164
 512 0024 8362     		str	r3, [r0, #40]
 371:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 513              		.loc 1 371 3 is_stmt 1 view .LVU165
 371:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 514              		.loc 1 371 28 is_stmt 0 view .LVU166
 515 0026 0A23     		movs	r3, #10
 516 0028 C362     		str	r3, [r0, #44]
 372:Core/Src/main.c ****   {
 517              		.loc 1 372 3 is_stmt 1 view .LVU167
 372:Core/Src/main.c ****   {
 518              		.loc 1 372 7 is_stmt 0 view .LVU168
 519 002a FFF7FEFF 		bl	HAL_SPI_Init
 520              	.LVL13:
 380:Core/Src/main.c **** 
 521              		.loc 1 380 1 view .LVU169
 522 002e 08BD     		pop	{r3, pc}
 523              	.L20:
 524              		.align	2
 525              	.L19:
 526 0030 00000000 		.word	hspi2
 527 0034 00380040 		.word	1073756160
 528              		.cfi_endproc
 529              	.LFE73:
 531              		.section	.text.MX_TIM2_Init,"ax",%progbits
 532              		.align	1
 533              		.syntax unified
 534              		.thumb
 535              		.thumb_func
 536              		.fpu softvfp
 538              	MX_TIM2_Init:
 539              	.LFB74:
 388:Core/Src/main.c **** 
 540              		.loc 1 388 1 is_stmt 1 view -0
 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 48
 543              		@ frame_needed = 0, uses_anonymous_args = 0
 544 0000 30B5     		push	{r4, r5, lr}
 545              	.LCFI11:
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 22


 546              		.cfi_def_cfa_offset 12
 547              		.cfi_offset 4, -12
 548              		.cfi_offset 5, -8
 549              		.cfi_offset 14, -4
 550 0002 8DB0     		sub	sp, sp, #52
 551              	.LCFI12:
 552              		.cfi_def_cfa_offset 64
 394:Core/Src/main.c ****   TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 553              		.loc 1 394 3 view .LVU171
 394:Core/Src/main.c ****   TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 554              		.loc 1 394 26 is_stmt 0 view .LVU172
 555 0004 0024     		movs	r4, #0
 556 0006 0894     		str	r4, [sp, #32]
 557 0008 0994     		str	r4, [sp, #36]
 558 000a 0A94     		str	r4, [sp, #40]
 559 000c 0B94     		str	r4, [sp, #44]
 395:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 560              		.loc 1 395 3 is_stmt 1 view .LVU173
 395:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 561              		.loc 1 395 26 is_stmt 0 view .LVU174
 562 000e 0394     		str	r4, [sp, #12]
 563 0010 0494     		str	r4, [sp, #16]
 564 0012 0594     		str	r4, [sp, #20]
 565 0014 0694     		str	r4, [sp, #24]
 566 0016 0794     		str	r4, [sp, #28]
 396:Core/Src/main.c **** 
 567              		.loc 1 396 3 is_stmt 1 view .LVU175
 396:Core/Src/main.c **** 
 568              		.loc 1 396 27 is_stmt 0 view .LVU176
 569 0018 0194     		str	r4, [sp, #4]
 570 001a 0294     		str	r4, [sp, #8]
 401:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 571              		.loc 1 401 3 is_stmt 1 view .LVU177
 401:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 572              		.loc 1 401 18 is_stmt 0 view .LVU178
 573 001c 114D     		ldr	r5, .L23
 574 001e 4FF08043 		mov	r3, #1073741824
 575 0022 2B60     		str	r3, [r5]
 402:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 576              		.loc 1 402 3 is_stmt 1 view .LVU179
 402:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 577              		.loc 1 402 24 is_stmt 0 view .LVU180
 578 0024 6C60     		str	r4, [r5, #4]
 403:Core/Src/main.c ****   htim2.Init.Period = 65535;
 579              		.loc 1 403 3 is_stmt 1 view .LVU181
 403:Core/Src/main.c ****   htim2.Init.Period = 65535;
 580              		.loc 1 403 26 is_stmt 0 view .LVU182
 581 0026 AC60     		str	r4, [r5, #8]
 404:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 582              		.loc 1 404 3 is_stmt 1 view .LVU183
 404:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 583              		.loc 1 404 21 is_stmt 0 view .LVU184
 584 0028 4FF6FF73 		movw	r3, #65535
 585 002c EB60     		str	r3, [r5, #12]
 405:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 586              		.loc 1 405 3 is_stmt 1 view .LVU185
 405:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 23


 587              		.loc 1 405 28 is_stmt 0 view .LVU186
 588 002e 2C61     		str	r4, [r5, #16]
 406:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 589              		.loc 1 406 3 is_stmt 1 view .LVU187
 406:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 590              		.loc 1 406 32 is_stmt 0 view .LVU188
 591 0030 AC61     		str	r4, [r5, #24]
 407:Core/Src/main.c ****   {
 592              		.loc 1 407 3 is_stmt 1 view .LVU189
 407:Core/Src/main.c ****   {
 593              		.loc 1 407 7 is_stmt 0 view .LVU190
 594 0032 2846     		mov	r0, r5
 595 0034 FFF7FEFF 		bl	HAL_TIM_Base_Init
 596              	.LVL14:
 411:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 597              		.loc 1 411 3 is_stmt 1 view .LVU191
 411:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 598              		.loc 1 411 34 is_stmt 0 view .LVU192
 599 0038 4FF48053 		mov	r3, #4096
 600 003c 0893     		str	r3, [sp, #32]
 412:Core/Src/main.c ****   {
 601              		.loc 1 412 3 is_stmt 1 view .LVU193
 412:Core/Src/main.c ****   {
 602              		.loc 1 412 7 is_stmt 0 view .LVU194
 603 003e 08A9     		add	r1, sp, #32
 604 0040 2846     		mov	r0, r5
 605 0042 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 606              	.LVL15:
 416:Core/Src/main.c ****   sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 607              		.loc 1 416 3 is_stmt 1 view .LVU195
 416:Core/Src/main.c ****   sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 608              		.loc 1 416 26 is_stmt 0 view .LVU196
 609 0046 0394     		str	r4, [sp, #12]
 417:Core/Src/main.c ****   if (HAL_TIM_SlaveConfigSynchro(&htim2, &sSlaveConfig) != HAL_OK)
 610              		.loc 1 417 3 is_stmt 1 view .LVU197
 417:Core/Src/main.c ****   if (HAL_TIM_SlaveConfigSynchro(&htim2, &sSlaveConfig) != HAL_OK)
 611              		.loc 1 417 29 is_stmt 0 view .LVU198
 612 0048 0494     		str	r4, [sp, #16]
 418:Core/Src/main.c ****   {
 613              		.loc 1 418 3 is_stmt 1 view .LVU199
 418:Core/Src/main.c ****   {
 614              		.loc 1 418 7 is_stmt 0 view .LVU200
 615 004a 03A9     		add	r1, sp, #12
 616 004c 2846     		mov	r0, r5
 617 004e FFF7FEFF 		bl	HAL_TIM_SlaveConfigSynchro
 618              	.LVL16:
 422:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 619              		.loc 1 422 3 is_stmt 1 view .LVU201
 422:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 620              		.loc 1 422 37 is_stmt 0 view .LVU202
 621 0052 0194     		str	r4, [sp, #4]
 423:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 622              		.loc 1 423 3 is_stmt 1 view .LVU203
 423:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 623              		.loc 1 423 33 is_stmt 0 view .LVU204
 624 0054 0294     		str	r4, [sp, #8]
 424:Core/Src/main.c ****   {
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 24


 625              		.loc 1 424 3 is_stmt 1 view .LVU205
 424:Core/Src/main.c ****   {
 626              		.loc 1 424 7 is_stmt 0 view .LVU206
 627 0056 01A9     		add	r1, sp, #4
 628 0058 2846     		mov	r0, r5
 629 005a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 630              	.LVL17:
 432:Core/Src/main.c **** 
 631              		.loc 1 432 1 view .LVU207
 632 005e 0DB0     		add	sp, sp, #52
 633              	.LCFI13:
 634              		.cfi_def_cfa_offset 12
 635              		@ sp needed
 636 0060 30BD     		pop	{r4, r5, pc}
 637              	.L24:
 638 0062 00BF     		.align	2
 639              	.L23:
 640 0064 00000000 		.word	htim2
 641              		.cfi_endproc
 642              	.LFE74:
 644              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 645              		.align	1
 646              		.syntax unified
 647              		.thumb
 648              		.thumb_func
 649              		.fpu softvfp
 651              	MX_USART1_UART_Init:
 652              	.LFB75:
 440:Core/Src/main.c **** 
 653              		.loc 1 440 1 is_stmt 1 view -0
 654              		.cfi_startproc
 655              		@ args = 0, pretend = 0, frame = 0
 656              		@ frame_needed = 0, uses_anonymous_args = 0
 657 0000 08B5     		push	{r3, lr}
 658              	.LCFI14:
 659              		.cfi_def_cfa_offset 8
 660              		.cfi_offset 3, -8
 661              		.cfi_offset 14, -4
 449:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 662              		.loc 1 449 3 view .LVU209
 449:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 663              		.loc 1 449 19 is_stmt 0 view .LVU210
 664 0002 0848     		ldr	r0, .L27
 665 0004 084B     		ldr	r3, .L27+4
 666 0006 0360     		str	r3, [r0]
 450:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 667              		.loc 1 450 3 is_stmt 1 view .LVU211
 450:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 668              		.loc 1 450 24 is_stmt 0 view .LVU212
 669 0008 4FF4E133 		mov	r3, #115200
 670 000c 4360     		str	r3, [r0, #4]
 451:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 671              		.loc 1 451 3 is_stmt 1 view .LVU213
 451:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 672              		.loc 1 451 26 is_stmt 0 view .LVU214
 673 000e 0023     		movs	r3, #0
 674 0010 8360     		str	r3, [r0, #8]
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 25


 452:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 675              		.loc 1 452 3 is_stmt 1 view .LVU215
 452:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 676              		.loc 1 452 24 is_stmt 0 view .LVU216
 677 0012 C360     		str	r3, [r0, #12]
 453:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 678              		.loc 1 453 3 is_stmt 1 view .LVU217
 453:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 679              		.loc 1 453 22 is_stmt 0 view .LVU218
 680 0014 0361     		str	r3, [r0, #16]
 454:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 681              		.loc 1 454 3 is_stmt 1 view .LVU219
 454:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 682              		.loc 1 454 20 is_stmt 0 view .LVU220
 683 0016 0C22     		movs	r2, #12
 684 0018 4261     		str	r2, [r0, #20]
 455:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 685              		.loc 1 455 3 is_stmt 1 view .LVU221
 455:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 686              		.loc 1 455 25 is_stmt 0 view .LVU222
 687 001a 8361     		str	r3, [r0, #24]
 456:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 688              		.loc 1 456 3 is_stmt 1 view .LVU223
 456:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 689              		.loc 1 456 28 is_stmt 0 view .LVU224
 690 001c C361     		str	r3, [r0, #28]
 457:Core/Src/main.c ****   {
 691              		.loc 1 457 3 is_stmt 1 view .LVU225
 457:Core/Src/main.c ****   {
 692              		.loc 1 457 7 is_stmt 0 view .LVU226
 693 001e FFF7FEFF 		bl	HAL_UART_Init
 694              	.LVL18:
 465:Core/Src/main.c **** 
 695              		.loc 1 465 1 view .LVU227
 696 0022 08BD     		pop	{r3, pc}
 697              	.L28:
 698              		.align	2
 699              	.L27:
 700 0024 00000000 		.word	huart1
 701 0028 00380140 		.word	1073821696
 702              		.cfi_endproc
 703              	.LFE75:
 705              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 706              		.align	1
 707              		.syntax unified
 708              		.thumb
 709              		.thumb_func
 710              		.fpu softvfp
 712              	MX_USART2_UART_Init:
 713              	.LFB76:
 473:Core/Src/main.c **** 
 714              		.loc 1 473 1 is_stmt 1 view -0
 715              		.cfi_startproc
 716              		@ args = 0, pretend = 0, frame = 0
 717              		@ frame_needed = 0, uses_anonymous_args = 0
 718 0000 08B5     		push	{r3, lr}
 719              	.LCFI15:
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 26


 720              		.cfi_def_cfa_offset 8
 721              		.cfi_offset 3, -8
 722              		.cfi_offset 14, -4
 482:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 723              		.loc 1 482 3 view .LVU229
 482:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 724              		.loc 1 482 19 is_stmt 0 view .LVU230
 725 0002 0848     		ldr	r0, .L31
 726 0004 084B     		ldr	r3, .L31+4
 727 0006 0360     		str	r3, [r0]
 483:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 728              		.loc 1 483 3 is_stmt 1 view .LVU231
 483:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 729              		.loc 1 483 24 is_stmt 0 view .LVU232
 730 0008 4FF4E133 		mov	r3, #115200
 731 000c 4360     		str	r3, [r0, #4]
 484:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 732              		.loc 1 484 3 is_stmt 1 view .LVU233
 484:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 733              		.loc 1 484 26 is_stmt 0 view .LVU234
 734 000e 0023     		movs	r3, #0
 735 0010 8360     		str	r3, [r0, #8]
 485:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 736              		.loc 1 485 3 is_stmt 1 view .LVU235
 485:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 737              		.loc 1 485 24 is_stmt 0 view .LVU236
 738 0012 C360     		str	r3, [r0, #12]
 486:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 739              		.loc 1 486 3 is_stmt 1 view .LVU237
 486:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 740              		.loc 1 486 22 is_stmt 0 view .LVU238
 741 0014 0361     		str	r3, [r0, #16]
 487:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 742              		.loc 1 487 3 is_stmt 1 view .LVU239
 487:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 743              		.loc 1 487 20 is_stmt 0 view .LVU240
 744 0016 0C22     		movs	r2, #12
 745 0018 4261     		str	r2, [r0, #20]
 488:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 746              		.loc 1 488 3 is_stmt 1 view .LVU241
 488:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 747              		.loc 1 488 25 is_stmt 0 view .LVU242
 748 001a 8361     		str	r3, [r0, #24]
 489:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 749              		.loc 1 489 3 is_stmt 1 view .LVU243
 489:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 750              		.loc 1 489 28 is_stmt 0 view .LVU244
 751 001c C361     		str	r3, [r0, #28]
 490:Core/Src/main.c ****   {
 752              		.loc 1 490 3 is_stmt 1 view .LVU245
 490:Core/Src/main.c ****   {
 753              		.loc 1 490 7 is_stmt 0 view .LVU246
 754 001e FFF7FEFF 		bl	HAL_UART_Init
 755              	.LVL19:
 498:Core/Src/main.c **** 
 756              		.loc 1 498 1 view .LVU247
 757 0022 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 27


 758              	.L32:
 759              		.align	2
 760              	.L31:
 761 0024 00000000 		.word	huart2
 762 0028 00440040 		.word	1073759232
 763              		.cfi_endproc
 764              	.LFE76:
 766              		.section	.text.SystemClock_Config,"ax",%progbits
 767              		.align	1
 768              		.global	SystemClock_Config
 769              		.syntax unified
 770              		.thumb
 771              		.thumb_func
 772              		.fpu softvfp
 774              	SystemClock_Config:
 775              	.LFB69:
 149:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 776              		.loc 1 149 1 is_stmt 1 view -0
 777              		.cfi_startproc
 778              		@ args = 0, pretend = 0, frame = 80
 779              		@ frame_needed = 0, uses_anonymous_args = 0
 780 0000 30B5     		push	{r4, r5, lr}
 781              	.LCFI16:
 782              		.cfi_def_cfa_offset 12
 783              		.cfi_offset 4, -12
 784              		.cfi_offset 5, -8
 785              		.cfi_offset 14, -4
 786 0002 95B0     		sub	sp, sp, #84
 787              	.LCFI17:
 788              		.cfi_def_cfa_offset 96
 150:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 789              		.loc 1 150 3 view .LVU249
 150:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 790              		.loc 1 150 22 is_stmt 0 view .LVU250
 791 0004 0024     		movs	r4, #0
 792 0006 0D94     		str	r4, [sp, #52]
 793 0008 0F94     		str	r4, [sp, #60]
 794 000a 1094     		str	r4, [sp, #64]
 151:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 795              		.loc 1 151 3 is_stmt 1 view .LVU251
 151:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 796              		.loc 1 151 22 is_stmt 0 view .LVU252
 797 000c 0594     		str	r4, [sp, #20]
 798 000e 0694     		str	r4, [sp, #24]
 799 0010 0794     		str	r4, [sp, #28]
 800 0012 0894     		str	r4, [sp, #32]
 801 0014 0994     		str	r4, [sp, #36]
 152:Core/Src/main.c **** 
 802              		.loc 1 152 3 is_stmt 1 view .LVU253
 152:Core/Src/main.c **** 
 803              		.loc 1 152 28 is_stmt 0 view .LVU254
 804 0016 0194     		str	r4, [sp, #4]
 805 0018 0294     		str	r4, [sp, #8]
 806 001a 0394     		str	r4, [sp, #12]
 807 001c 0494     		str	r4, [sp, #16]
 157:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 808              		.loc 1 157 3 is_stmt 1 view .LVU255
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 28


 157:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 809              		.loc 1 157 36 is_stmt 0 view .LVU256
 810 001e 0122     		movs	r2, #1
 811 0020 0A92     		str	r2, [sp, #40]
 158:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 812              		.loc 1 158 3 is_stmt 1 view .LVU257
 158:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 813              		.loc 1 158 30 is_stmt 0 view .LVU258
 814 0022 4FF48033 		mov	r3, #65536
 815 0026 0B93     		str	r3, [sp, #44]
 159:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 816              		.loc 1 159 3 is_stmt 1 view .LVU259
 159:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 817              		.loc 1 159 36 is_stmt 0 view .LVU260
 818 0028 0C94     		str	r4, [sp, #48]
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 819              		.loc 1 160 3 is_stmt 1 view .LVU261
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 820              		.loc 1 160 30 is_stmt 0 view .LVU262
 821 002a 0E92     		str	r2, [sp, #56]
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 822              		.loc 1 161 3 is_stmt 1 view .LVU263
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 823              		.loc 1 161 34 is_stmt 0 view .LVU264
 824 002c 0225     		movs	r5, #2
 825 002e 1195     		str	r5, [sp, #68]
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 826              		.loc 1 162 3 is_stmt 1 view .LVU265
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 827              		.loc 1 162 35 is_stmt 0 view .LVU266
 828 0030 1293     		str	r3, [sp, #72]
 163:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 829              		.loc 1 163 3 is_stmt 1 view .LVU267
 163:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 830              		.loc 1 163 32 is_stmt 0 view .LVU268
 831 0032 4FF4E013 		mov	r3, #1835008
 832 0036 1393     		str	r3, [sp, #76]
 164:Core/Src/main.c ****   {
 833              		.loc 1 164 3 is_stmt 1 view .LVU269
 164:Core/Src/main.c ****   {
 834              		.loc 1 164 7 is_stmt 0 view .LVU270
 835 0038 0AA8     		add	r0, sp, #40
 836 003a FFF7FEFF 		bl	HAL_RCC_OscConfig
 837              	.LVL20:
 170:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 838              		.loc 1 170 3 is_stmt 1 view .LVU271
 170:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 839              		.loc 1 170 31 is_stmt 0 view .LVU272
 840 003e 0F23     		movs	r3, #15
 841 0040 0593     		str	r3, [sp, #20]
 172:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 842              		.loc 1 172 3 is_stmt 1 view .LVU273
 172:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 843              		.loc 1 172 34 is_stmt 0 view .LVU274
 844 0042 0695     		str	r5, [sp, #24]
 173:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 845              		.loc 1 173 3 is_stmt 1 view .LVU275
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 29


 173:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 846              		.loc 1 173 35 is_stmt 0 view .LVU276
 847 0044 0794     		str	r4, [sp, #28]
 174:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 848              		.loc 1 174 3 is_stmt 1 view .LVU277
 174:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 849              		.loc 1 174 36 is_stmt 0 view .LVU278
 850 0046 4FF48063 		mov	r3, #1024
 851 004a 0893     		str	r3, [sp, #32]
 175:Core/Src/main.c **** 
 852              		.loc 1 175 3 is_stmt 1 view .LVU279
 175:Core/Src/main.c **** 
 853              		.loc 1 175 36 is_stmt 0 view .LVU280
 854 004c 0994     		str	r4, [sp, #36]
 177:Core/Src/main.c ****   {
 855              		.loc 1 177 3 is_stmt 1 view .LVU281
 177:Core/Src/main.c ****   {
 856              		.loc 1 177 7 is_stmt 0 view .LVU282
 857 004e 2946     		mov	r1, r5
 858 0050 05A8     		add	r0, sp, #20
 859 0052 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 860              	.LVL21:
 181:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 861              		.loc 1 181 3 is_stmt 1 view .LVU283
 181:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 862              		.loc 1 181 38 is_stmt 0 view .LVU284
 863 0056 0195     		str	r5, [sp, #4]
 182:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 864              		.loc 1 182 3 is_stmt 1 view .LVU285
 182:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 865              		.loc 1 182 35 is_stmt 0 view .LVU286
 866 0058 4FF40043 		mov	r3, #32768
 867 005c 0393     		str	r3, [sp, #12]
 183:Core/Src/main.c ****   {
 868              		.loc 1 183 3 is_stmt 1 view .LVU287
 183:Core/Src/main.c ****   {
 869              		.loc 1 183 7 is_stmt 0 view .LVU288
 870 005e 01A8     		add	r0, sp, #4
 871 0060 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 872              	.LVL22:
 187:Core/Src/main.c **** 
 873              		.loc 1 187 1 view .LVU289
 874 0064 15B0     		add	sp, sp, #84
 875              	.LCFI18:
 876              		.cfi_def_cfa_offset 12
 877              		@ sp needed
 878 0066 30BD     		pop	{r4, r5, pc}
 879              		.cfi_endproc
 880              	.LFE69:
 882              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 883              		.align	2
 884              	.LC0:
 885 0000 48454C4C 		.ascii	"HELLO\000"
 885      4F00
 886              		.section	.text.main,"ax",%progbits
 887              		.align	1
 888              		.global	main
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 30


 889              		.syntax unified
 890              		.thumb
 891              		.thumb_func
 892              		.fpu softvfp
 894              	main:
 895              	.LFB68:
  84:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 896              		.loc 1 84 1 is_stmt 1 view -0
 897              		.cfi_startproc
 898              		@ args = 0, pretend = 0, frame = 0
 899              		@ frame_needed = 0, uses_anonymous_args = 0
 900 0000 10B5     		push	{r4, lr}
 901              	.LCFI19:
 902              		.cfi_def_cfa_offset 8
 903              		.cfi_offset 4, -8
 904              		.cfi_offset 14, -4
  91:Core/Src/main.c **** 
 905              		.loc 1 91 3 view .LVU291
 906 0002 FFF7FEFF 		bl	HAL_Init
 907              	.LVL23:
  98:Core/Src/main.c **** 
 908              		.loc 1 98 3 view .LVU292
 909 0006 FFF7FEFF 		bl	SystemClock_Config
 910              	.LVL24:
 105:Core/Src/main.c ****   MX_ADC1_Init();
 911              		.loc 1 105 3 view .LVU293
 912 000a FFF7FEFF 		bl	MX_GPIO_Init
 913              	.LVL25:
 106:Core/Src/main.c ****   MX_ADC2_Init();
 914              		.loc 1 106 3 view .LVU294
 915 000e FFF7FEFF 		bl	MX_ADC1_Init
 916              	.LVL26:
 107:Core/Src/main.c ****   MX_I2C1_Init();
 917              		.loc 1 107 3 view .LVU295
 918 0012 FFF7FEFF 		bl	MX_ADC2_Init
 919              	.LVL27:
 108:Core/Src/main.c ****   MX_SPI2_Init();
 920              		.loc 1 108 3 view .LVU296
 921 0016 FFF7FEFF 		bl	MX_I2C1_Init
 922              	.LVL28:
 109:Core/Src/main.c ****   MX_TIM2_Init();
 923              		.loc 1 109 3 view .LVU297
 924 001a FFF7FEFF 		bl	MX_SPI2_Init
 925              	.LVL29:
 110:Core/Src/main.c ****   MX_USART1_UART_Init();
 926              		.loc 1 110 3 view .LVU298
 927 001e FFF7FEFF 		bl	MX_TIM2_Init
 928              	.LVL30:
 111:Core/Src/main.c ****   MX_USART2_UART_Init();
 929              		.loc 1 111 3 view .LVU299
 930 0022 FFF7FEFF 		bl	MX_USART1_UART_Init
 931              	.LVL31:
 112:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 932              		.loc 1 112 3 view .LVU300
 933 0026 FFF7FEFF 		bl	MX_USART2_UART_Init
 934              	.LVL32:
 114:Core/Src/main.c ****   uint32_t millis = 0;
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 31


 935              		.loc 1 114 3 view .LVU301
 936 002a 1B48     		ldr	r0, .L40
 937 002c FFF7FEFF 		bl	HAL_ADCEx_Calibration_Start
 938              	.LVL33:
 115:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8, GPIO_PIN_SET);
 939              		.loc 1 115 3 view .LVU302
 116:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_9, GPIO_PIN_SET);
 940              		.loc 1 116 3 view .LVU303
 941 0030 1A4C     		ldr	r4, .L40+4
 942 0032 0122     		movs	r2, #1
 943 0034 4FF48071 		mov	r1, #256
 944 0038 2046     		mov	r0, r4
 945 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 946              	.LVL34:
 117:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_SET);
 947              		.loc 1 117 3 view .LVU304
 948 003e 0122     		movs	r2, #1
 949 0040 4FF40071 		mov	r1, #512
 950 0044 2046     		mov	r0, r4
 951 0046 FFF7FEFF 		bl	HAL_GPIO_WritePin
 952              	.LVL35:
 118:Core/Src/main.c ****   ssd1306_Init();
 953              		.loc 1 118 3 view .LVU305
 954 004a 0122     		movs	r2, #1
 955 004c 4FF48061 		mov	r1, #1024
 956 0050 2046     		mov	r0, r4
 957 0052 FFF7FEFF 		bl	HAL_GPIO_WritePin
 958              	.LVL36:
 119:Core/Src/main.c ****   /* USER CODE END 2 */
 959              		.loc 1 119 3 view .LVU306
 960 0056 FFF7FEFF 		bl	ssd1306_Init
 961              	.LVL37:
 115:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8, GPIO_PIN_SET);
 962              		.loc 1 115 12 is_stmt 0 view .LVU307
 963 005a 0024     		movs	r4, #0
 964 005c 08E0     		b	.L36
 965              	.LVL38:
 966              	.L39:
 136:Core/Src/main.c ****       millis = HAL_GetTick();
 967              		.loc 1 136 7 is_stmt 1 view .LVU308
 968 005e 8021     		movs	r1, #128
 969 0060 0F48     		ldr	r0, .L40+8
 970 0062 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 971              	.LVL39:
 137:Core/Src/main.c ****       ssd1306_UpdateScreen();
 972              		.loc 1 137 7 view .LVU309
 137:Core/Src/main.c ****       ssd1306_UpdateScreen();
 973              		.loc 1 137 16 is_stmt 0 view .LVU310
 974 0066 FFF7FEFF 		bl	HAL_GetTick
 975              	.LVL40:
 976 006a 0446     		mov	r4, r0
 977              	.LVL41:
 138:Core/Src/main.c ****     }
 978              		.loc 1 138 7 is_stmt 1 view .LVU311
 979 006c FFF7FEFF 		bl	ssd1306_UpdateScreen
 980              	.LVL42:
 981              	.L36:
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 32


 124:Core/Src/main.c ****   {
 982              		.loc 1 124 3 view .LVU312
 129:Core/Src/main.c **** 		ssd1306_SetCursor(0  ,  0);
 983              		.loc 1 129 5 view .LVU313
 984 0070 0020     		movs	r0, #0
 985 0072 FFF7FEFF 		bl	ssd1306_Fill
 986              	.LVL43:
 130:Core/Src/main.c ****     //char out[100];
 987              		.loc 1 130 3 view .LVU314
 988 0076 0021     		movs	r1, #0
 989 0078 0846     		mov	r0, r1
 990 007a FFF7FEFF 		bl	ssd1306_SetCursor
 991              	.LVL44:
 133:Core/Src/main.c ****     if(HAL_GetTick() - millis > 100)
 992              		.loc 1 133 3 view .LVU315
 993 007e 094A     		ldr	r2, .L40+12
 994 0080 0123     		movs	r3, #1
 995 0082 06CA     		ldm	r2, {r1, r2}
 996 0084 0848     		ldr	r0, .L40+16
 997 0086 FFF7FEFF 		bl	ssd1306_WriteString
 998              	.LVL45:
 134:Core/Src/main.c ****     {
 999              		.loc 1 134 5 view .LVU316
 134:Core/Src/main.c ****     {
 1000              		.loc 1 134 8 is_stmt 0 view .LVU317
 1001 008a FFF7FEFF 		bl	HAL_GetTick
 1002              	.LVL46:
 134:Core/Src/main.c ****     {
 1003              		.loc 1 134 22 view .LVU318
 1004 008e 031B     		subs	r3, r0, r4
 134:Core/Src/main.c ****     {
 1005              		.loc 1 134 7 view .LVU319
 1006 0090 642B     		cmp	r3, #100
 1007 0092 EDD9     		bls	.L36
 1008 0094 E3E7     		b	.L39
 1009              	.L41:
 1010 0096 00BF     		.align	2
 1011              	.L40:
 1012 0098 00000000 		.word	hadc1
 1013 009c 000C0140 		.word	1073810432
 1014 00a0 00080140 		.word	1073809408
 1015 00a4 00000000 		.word	Font_11x18
 1016 00a8 00000000 		.word	.LC0
 1017              		.cfi_endproc
 1018              	.LFE68:
 1020              		.section	.text._write,"ax",%progbits
 1021              		.align	1
 1022              		.global	_write
 1023              		.syntax unified
 1024              		.thumb
 1025              		.thumb_func
 1026              		.fpu softvfp
 1028              	_write:
 1029              	.LVL47:
 1030              	.LFB78:
 535:Core/Src/main.c **** 
 536:Core/Src/main.c **** /* USER CODE BEGIN 4 */
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 33


 537:Core/Src/main.c **** int _write(int fd, char * ptr, int len)
 538:Core/Src/main.c **** {
 1031              		.loc 1 538 1 is_stmt 1 view -0
 1032              		.cfi_startproc
 1033              		@ args = 0, pretend = 0, frame = 0
 1034              		@ frame_needed = 0, uses_anonymous_args = 0
 1035              		.loc 1 538 1 is_stmt 0 view .LVU321
 1036 0000 10B5     		push	{r4, lr}
 1037              	.LCFI20:
 1038              		.cfi_def_cfa_offset 8
 1039              		.cfi_offset 4, -8
 1040              		.cfi_offset 14, -4
 1041 0002 1446     		mov	r4, r2
 539:Core/Src/main.c **** 	HAL_UART_Transmit(&huart1, (uint8_t *) ptr, len, HAL_MAX_DELAY);
 1042              		.loc 1 539 2 is_stmt 1 view .LVU322
 1043 0004 4FF0FF33 		mov	r3, #-1
 1044 0008 92B2     		uxth	r2, r2
 1045              	.LVL48:
 1046              		.loc 1 539 2 is_stmt 0 view .LVU323
 1047 000a 0248     		ldr	r0, .L44
 1048              	.LVL49:
 1049              		.loc 1 539 2 view .LVU324
 1050 000c FFF7FEFF 		bl	HAL_UART_Transmit
 1051              	.LVL50:
 540:Core/Src/main.c **** 	return len;
 1052              		.loc 1 540 2 is_stmt 1 view .LVU325
 541:Core/Src/main.c **** }
 1053              		.loc 1 541 1 is_stmt 0 view .LVU326
 1054 0010 2046     		mov	r0, r4
 1055 0012 10BD     		pop	{r4, pc}
 1056              	.LVL51:
 1057              	.L45:
 1058              		.loc 1 541 1 view .LVU327
 1059              		.align	2
 1060              	.L44:
 1061 0014 00000000 		.word	huart1
 1062              		.cfi_endproc
 1063              	.LFE78:
 1065              		.section	.text.__io_putchar,"ax",%progbits
 1066              		.align	1
 1067              		.global	__io_putchar
 1068              		.syntax unified
 1069              		.thumb
 1070              		.thumb_func
 1071              		.fpu softvfp
 1073              	__io_putchar:
 1074              	.LVL52:
 1075              	.LFB79:
 542:Core/Src/main.c **** PUTCHAR_PROTOTYPE
 543:Core/Src/main.c **** {
 1076              		.loc 1 543 1 is_stmt 1 view -0
 1077              		.cfi_startproc
 1078              		@ args = 0, pretend = 0, frame = 8
 1079              		@ frame_needed = 0, uses_anonymous_args = 0
 1080              		.loc 1 543 1 is_stmt 0 view .LVU329
 1081 0000 00B5     		push	{lr}
 1082              	.LCFI21:
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 34


 1083              		.cfi_def_cfa_offset 4
 1084              		.cfi_offset 14, -4
 1085 0002 83B0     		sub	sp, sp, #12
 1086              	.LCFI22:
 1087              		.cfi_def_cfa_offset 16
 1088 0004 0190     		str	r0, [sp, #4]
 544:Core/Src/main.c **** 	HAL_UART_Transmit(&huart1, (uint8_t *)&ch, 1, HAL_MAX_DELAY);
 1089              		.loc 1 544 2 is_stmt 1 view .LVU330
 1090 0006 4FF0FF33 		mov	r3, #-1
 1091 000a 0122     		movs	r2, #1
 1092 000c 01A9     		add	r1, sp, #4
 1093 000e 0348     		ldr	r0, .L48
 1094              	.LVL53:
 1095              		.loc 1 544 2 is_stmt 0 view .LVU331
 1096 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 1097              	.LVL54:
 545:Core/Src/main.c **** 	return ch;
 1098              		.loc 1 545 2 is_stmt 1 view .LVU332
 546:Core/Src/main.c **** }
 1099              		.loc 1 546 1 is_stmt 0 view .LVU333
 1100 0014 0198     		ldr	r0, [sp, #4]
 1101 0016 03B0     		add	sp, sp, #12
 1102              	.LCFI23:
 1103              		.cfi_def_cfa_offset 4
 1104              		@ sp needed
 1105 0018 5DF804FB 		ldr	pc, [sp], #4
 1106              	.L49:
 1107              		.align	2
 1108              	.L48:
 1109 001c 00000000 		.word	huart1
 1110              		.cfi_endproc
 1111              	.LFE79:
 1113              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1114              		.align	1
 1115              		.global	HAL_TIM_PeriodElapsedCallback
 1116              		.syntax unified
 1117              		.thumb
 1118              		.thumb_func
 1119              		.fpu softvfp
 1121              	HAL_TIM_PeriodElapsedCallback:
 1122              	.LVL55:
 1123              	.LFB80:
 547:Core/Src/main.c **** /* USER CODE END 4 */
 548:Core/Src/main.c **** 
 549:Core/Src/main.c **** /**
 550:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 551:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 552:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 553:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 554:Core/Src/main.c ****   * @param  htim : TIM handle
 555:Core/Src/main.c ****   * @retval None
 556:Core/Src/main.c ****   */
 557:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 558:Core/Src/main.c **** {
 1124              		.loc 1 558 1 is_stmt 1 view -0
 1125              		.cfi_startproc
 1126              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 35


 1127              		@ frame_needed = 0, uses_anonymous_args = 0
 1128              		.loc 1 558 1 is_stmt 0 view .LVU335
 1129 0000 08B5     		push	{r3, lr}
 1130              	.LCFI24:
 1131              		.cfi_def_cfa_offset 8
 1132              		.cfi_offset 3, -8
 1133              		.cfi_offset 14, -4
 559:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 560:Core/Src/main.c **** 
 561:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 562:Core/Src/main.c ****   if (htim->Instance == TIM1) {
 1134              		.loc 1 562 3 is_stmt 1 view .LVU336
 1135              		.loc 1 562 11 is_stmt 0 view .LVU337
 1136 0002 0268     		ldr	r2, [r0]
 1137              		.loc 1 562 6 view .LVU338
 1138 0004 034B     		ldr	r3, .L54
 1139 0006 9A42     		cmp	r2, r3
 1140 0008 00D0     		beq	.L53
 1141              	.LVL56:
 1142              	.L50:
 563:Core/Src/main.c ****     HAL_IncTick();
 564:Core/Src/main.c ****   }
 565:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 566:Core/Src/main.c **** 
 567:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 568:Core/Src/main.c **** }
 1143              		.loc 1 568 1 view .LVU339
 1144 000a 08BD     		pop	{r3, pc}
 1145              	.LVL57:
 1146              	.L53:
 563:Core/Src/main.c ****     HAL_IncTick();
 1147              		.loc 1 563 5 is_stmt 1 view .LVU340
 1148 000c FFF7FEFF 		bl	HAL_IncTick
 1149              	.LVL58:
 1150              		.loc 1 568 1 is_stmt 0 view .LVU341
 1151 0010 FBE7     		b	.L50
 1152              	.L55:
 1153 0012 00BF     		.align	2
 1154              	.L54:
 1155 0014 002C0140 		.word	1073818624
 1156              		.cfi_endproc
 1157              	.LFE80:
 1159              		.section	.text.Error_Handler,"ax",%progbits
 1160              		.align	1
 1161              		.global	Error_Handler
 1162              		.syntax unified
 1163              		.thumb
 1164              		.thumb_func
 1165              		.fpu softvfp
 1167              	Error_Handler:
 1168              	.LFB81:
 569:Core/Src/main.c **** 
 570:Core/Src/main.c **** /**
 571:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 572:Core/Src/main.c ****   * @retval None
 573:Core/Src/main.c ****   */
 574:Core/Src/main.c **** void Error_Handler(void)
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 36


 575:Core/Src/main.c **** {
 1169              		.loc 1 575 1 is_stmt 1 view -0
 1170              		.cfi_startproc
 1171              		@ args = 0, pretend = 0, frame = 0
 1172              		@ frame_needed = 0, uses_anonymous_args = 0
 1173              		@ link register save eliminated.
 576:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 577:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 578:Core/Src/main.c **** 
 579:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 580:Core/Src/main.c **** }
 1174              		.loc 1 580 1 view .LVU343
 1175 0000 7047     		bx	lr
 1176              		.cfi_endproc
 1177              	.LFE81:
 1179              		.comm	huart2,64,4
 1180              		.comm	huart1,64,4
 1181              		.comm	htim2,72,4
 1182              		.comm	hspi2,88,4
 1183              		.comm	hi2c1,84,4
 1184              		.comm	hadc2,48,4
 1185              		.comm	hadc1,48,4
 1186              		.text
 1187              	.Letext0:
 1188              		.file 2 "c:\\dev\\gcc-arm-none-eabi-9-2020-q2-update-win32\\arm-none-eabi\\include\\machine\\_defa
 1189              		.file 3 "c:\\dev\\gcc-arm-none-eabi-9-2020-q2-update-win32\\arm-none-eabi\\include\\sys\\_stdint.h
 1190              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 1191              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1192              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1193              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1194              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1195              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1196              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1197              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1198              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1199              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 1200              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 1201              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 1202              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1203              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1204              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1205              		.file 19 "c:\\dev\\gcc-arm-none-eabi-9-2020-q2-update-win32\\lib\\gcc\\arm-none-eabi\\9.3.1\\inclu
 1206              		.file 20 "c:\\dev\\gcc-arm-none-eabi-9-2020-q2-update-win32\\arm-none-eabi\\include\\sys\\_types.h
 1207              		.file 21 "c:\\dev\\gcc-arm-none-eabi-9-2020-q2-update-win32\\arm-none-eabi\\include\\sys\\reent.h"
 1208              		.file 22 "c:\\dev\\gcc-arm-none-eabi-9-2020-q2-update-win32\\arm-none-eabi\\include\\sys\\lock.h"
 1209              		.file 23 "Core/Inc/ssd1306/ssd1306_fonts.h"
 1210              		.file 24 "Core/Inc/ssd1306/ssd1306.h"
 1211              		.file 25 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 1212              		.file 26 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc_ex.h"
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 37


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:16     .text.MX_GPIO_Init:00000000 $t
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:23     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:154    .text.MX_GPIO_Init:00000088 $d
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:161    .text.MX_ADC1_Init:00000000 $t
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:167    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:269    .text.MX_ADC1_Init:0000005c $d
                            *COM*:00000030 hadc1
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:275    .text.MX_ADC2_Init:00000000 $t
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:281    .text.MX_ADC2_Init:00000000 MX_ADC2_Init
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:387    .text.MX_ADC2_Init:00000064 $d
                            *COM*:00000030 hadc2
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:393    .text.MX_I2C1_Init:00000000 $t
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:399    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:451    .text.MX_I2C1_Init:00000028 $d
                            *COM*:00000054 hi2c1
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:458    .text.MX_SPI2_Init:00000000 $t
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:464    .text.MX_SPI2_Init:00000000 MX_SPI2_Init
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:526    .text.MX_SPI2_Init:00000030 $d
                            *COM*:00000058 hspi2
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:532    .text.MX_TIM2_Init:00000000 $t
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:538    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:640    .text.MX_TIM2_Init:00000064 $d
                            *COM*:00000048 htim2
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:645    .text.MX_USART1_UART_Init:00000000 $t
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:651    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:700    .text.MX_USART1_UART_Init:00000024 $d
                            *COM*:00000040 huart1
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:706    .text.MX_USART2_UART_Init:00000000 $t
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:712    .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:761    .text.MX_USART2_UART_Init:00000024 $d
                            *COM*:00000040 huart2
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:767    .text.SystemClock_Config:00000000 $t
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:774    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:883    .rodata.main.str1.4:00000000 $d
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:887    .text.main:00000000 $t
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:894    .text.main:00000000 main
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:1012   .text.main:00000098 $d
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:1021   .text._write:00000000 $t
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:1028   .text._write:00000000 _write
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:1061   .text._write:00000014 $d
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:1066   .text.__io_putchar:00000000 $t
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:1073   .text.__io_putchar:00000000 __io_putchar
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:1109   .text.__io_putchar:0000001c $d
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:1114   .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:1121   .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:1155   .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:1160   .text.Error_Handler:00000000 $t
C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s:1167   .text.Error_Handler:00000000 Error_Handler

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_I2C_Init
ARM GAS  C:\Users\arada\AppData\Local\Temp\ccvnwP8j.s 			page 38


HAL_SPI_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_SlaveConfigSynchro
HAL_TIMEx_MasterConfigSynchronization
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
HAL_ADCEx_Calibration_Start
ssd1306_Init
HAL_GPIO_TogglePin
HAL_GetTick
ssd1306_UpdateScreen
ssd1306_Fill
ssd1306_SetCursor
ssd1306_WriteString
Font_11x18
HAL_UART_Transmit
HAL_IncTick
